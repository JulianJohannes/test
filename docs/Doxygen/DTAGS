<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="file">
    <name>advectionErrors.H</name>
    <path>/home/julian/OpenFOAM/leia2/applications/solvers/leiaLevelSetFoam/</path>
    <filename>advectionErrors_8H.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reportErrors</name>
      <anchorfile>advectionErrors_8H.html</anchorfile>
      <anchor>ab0cedb36a65a562d23c7178d695269a3</anchor>
      <arglist>(Ostream &amp;os, const volScalarField &amp;psi, const volScalarField &amp;psi0, const volScalarField &amp;alpha, const volScalarField &amp;alpha0, const surfaceScalarField &amp;phi, scalar maxCoNum)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>advectionVerification.H</name>
    <path>/home/julian/OpenFOAM/leia2/applications/solvers/leiaLevelSetFoam/</path>
    <filename>advectionVerification_8H.html</filename>
    <class kind="class">Foam::velocityModel</class>
    <class kind="class">Foam::shear2D</class>
    <class kind="class">Foam::deformation3D</class>
    <class kind="class">Foam::shear3D</class>
    <class kind="class">Foam::translation</class>
    <class kind="class">Foam::rotation</class>
    <class kind="class">Foam::vortex2D</class>
    <class kind="class">Foam::periodic2D</class>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab4abb7dbbf3e6ba99e90ca3361092863</anchor>
      <arglist>(velocityModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>adc41e8fe10ea896cc46c9ba87fa4270d</anchor>
      <arglist>(velocityModel, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6f740b8adfc44000c80cfbdc284e960b</anchor>
      <arglist>(deformation3D, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6ad9de4c2039d49232a3de0b27f9cfff</anchor>
      <arglist>(velocityModel, deformation3D, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a1db28cf5ad4472a5a86b70477a8cf974</anchor>
      <arglist>(shear3D, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a4d2b1d014e248e4010dc57da71138998</anchor>
      <arglist>(velocityModel, shear3D, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a5a14ae6bc28b8d51cbd4e59ff42fcfca</anchor>
      <arglist>(translation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac3f529c69ffd79aba01e723bb0ae7ff9</anchor>
      <arglist>(velocityModel, translation, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad991b36a4f6f70a498313dcb83814b6c</anchor>
      <arglist>(rotation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a52002db7f067534ab847f133baf4cf9f</anchor>
      <arglist>(velocityModel, rotation, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a8acd7a35318d8686eb0019bf759de162</anchor>
      <arglist>(vortex2D, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a3b329f58c5d5e5f4dd7b064e32324cb2</anchor>
      <arglist>(velocityModel, vortex2D, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6b3a0afeb94a80efea935b7cd4844be2</anchor>
      <arglist>(periodic2D, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad89597dcc8c0c3e357b72dab21724657</anchor>
      <arglist>(velocityModel, periodic2D, Mesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>correctFlux</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a39f6ae52d5b2edcdd0e997e46ca56e46</anchor>
      <arglist>(surfaceScalarField &amp;phi)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>errorCalculation.H</name>
    <path>/home/julian/OpenFOAM/leia2/applications/solvers/leiaLevelSetFoam/</path>
    <filename>errorCalculation_8H.html</filename>
    <member kind="function">
      <type>surfaceScalarField</type>
      <name>phi0</name>
      <anchorfile>errorCalculation_8H.html</anchorfile>
      <anchor>a9d823340daf7973efdb2806c95879888</anchor>
      <arglist>(&quot;phi0&quot;, phi)</arglist>
    </member>
    <member kind="function">
      <type>volVectorField</type>
      <name>U0</name>
      <anchorfile>errorCalculation_8H.html</anchorfile>
      <anchor>aeb0573dd00ad67c50010e8f01877cc2c</anchor>
      <arglist>(&quot;U0&quot;, U)</arglist>
    </member>
    <member kind="function">
      <type>volScalarField</type>
      <name>psi0</name>
      <anchorfile>errorCalculation_8H.html</anchorfile>
      <anchor>ae9f0ddde249653348d4a211dbbb7096b</anchor>
      <arglist>(IOobject(&quot;psiEnd&quot;, runTime.timeName(), mesh, IOobject::READ_IF_PRESENT, IOobject::NO_WRITE), psi)</arglist>
    </member>
    <member kind="function">
      <type>volScalarField</type>
      <name>alpha0</name>
      <anchorfile>errorCalculation_8H.html</anchorfile>
      <anchor>ab2bce992421343d52c06932332da5058</anchor>
      <arglist>(IOobject(&quot;alphaEnd&quot;, runTime.timeName(), mesh, IOobject::READ_IF_PRESENT, IOobject::NO_WRITE), alpha)</arglist>
    </member>
    <member kind="function">
      <type>OFstream</type>
      <name>errorFile</name>
      <anchorfile>errorCalculation_8H.html</anchorfile>
      <anchor>abd17a7599ee9cd6d6ee7f71c4cf1d6e8</anchor>
      <arglist>(&quot;leiaLevelSetFoam.csv&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>leiaLevelSetFoam.C</name>
    <path>/home/julian/OpenFOAM/leia2/applications/solvers/leiaLevelSetFoam/</path>
    <filename>leiaLevelSetFoam_8C.html</filename>
  </compound>
  <compound kind="file">
    <name>leiaPerturbMesh.C</name>
    <path>/home/julian/OpenFOAM/leia2/applications/utilities/preProcessing/leiaPerturbMesh/</path>
    <filename>leiaPerturbMesh_8C.html</filename>
  </compound>
  <compound kind="file">
    <name>createFields.H</name>
    <path>/home/julian/OpenFOAM/leia2/applications/utilities/preProcessing/leiaSetFields/</path>
    <filename>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</filename>
    <member kind="function">
      <type></type>
      <name>Info&lt;&lt; &quot;Reading field psi\n&quot;&lt;&lt; endl;volScalarField psi(IOobject(&quot;psi&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);Info&lt;&lt; &quot;Reading field alpha\n&quot;&lt;&lt; endl;volScalarField alpha(IOobject(&quot;alpha&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);const fvSolution &amp;fvSolution(mesh);const dictionary &amp;levelSetDict=fvSolution.subDict(&quot;levelSet&quot;);const dictionary &amp;implSurfDict=levelSetDict.subDict(&quot;implicitSurface&quot;);const word implSurfType=implSurfDict.get&lt; word &gt;</name>
      <anchorfile>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</anchorfile>
      <anchor>aa521ac4ede76706eb2efdad76ef1253c</anchor>
      <arglist>(&quot;type&quot;)</arglist>
    </member>
    <member kind="function">
      <type>narrowBand</type>
      <name>calc</name>
      <anchorfile>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</anchorfile>
      <anchor>a50fcb94469b8bd68d3a0c652ff1b9ea7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>autoPtr&lt; implicitSurface &gt;</type>
      <name>implSurf</name>
      <anchorfile>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</anchorfile>
      <anchor>aa0e859aeb80623a0586191f11f32e47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const dictionary &amp;</type>
      <name>profileDict</name>
      <anchorfile>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</anchorfile>
      <anchor>a8c59e5037e8db5708a3d29918d945c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const word</type>
      <name>profileType</name>
      <anchorfile>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</anchorfile>
      <anchor>aaf86183d176d7283da747060c8c87682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>autoPtr&lt; profile &gt;</type>
      <name>LSprofile_ptr</name>
      <anchorfile>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</anchorfile>
      <anchor>adc8829bb960f0666efce53bf5351fc70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>profile</type>
      <name>LSprofile</name>
      <anchorfile>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</anchorfile>
      <anchor>a6ae37e3d6d52fb70e6f46e984442f21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>autoPtr&lt; NarrowBand &gt;</type>
      <name>narrowBand</name>
      <anchorfile>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</anchorfile>
      <anchor>a5a58c1d0dd05316c45043970fbf98bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>autoPtr&lt; phaseIndicator &gt;</type>
      <name>phaseInd</name>
      <anchorfile>utilities_2preProcessing_2leiaSetFields_2createFields_8H.html</anchorfile>
      <anchor>ab6f3db223f93b19b9fd86f42f84818a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>createFields.H</name>
    <path>/home/julian/OpenFOAM/leia2/applications/solvers/leiaLevelSetFoam/</path>
    <filename>solvers_2leiaLevelSetFoam_2createFields_8H.html</filename>
    <member kind="function">
      <type>narrowBand</type>
      <name>calc</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>a50fcb94469b8bd68d3a0c652ff1b9ea7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>narrowBand</type>
      <name>write</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>ac5370a3f202de84040d5e2d2c7b3a0bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>phaseInd</type>
      <name>calcPhaseIndicator</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>aa6d9d96081f854e676244ca6ea288be9</anchor>
      <arglist>(alpha, psi)</arglist>
    </member>
    <member kind="function">
      <type>source</type>
      <name>update</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>a94deb4a6975ae695185325402f283cf6</anchor>
      <arglist>(psi, U)</arglist>
    </member>
    <member kind="function">
      <type>velocityModel</type>
      <name>setVolumetricFlux</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>a2b85fb477b831927c3cfeb8facef4ec1</anchor>
      <arglist>(phi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>aa8740e48500d7e8ed14c84ded320af9a</anchor>
      <arglist>(args.found(&quot;fluxCorrection&quot;)) correctFlux(phi)</arglist>
    </member>
    <member kind="function">
      <type>velocityModel</type>
      <name>setVelocity</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>a9d7f4f90a066f440cd2f7e3873cad045</anchor>
      <arglist>(U)</arglist>
    </member>
    <member kind="variable">
      <type>Info&lt;&lt; &quot;Reading field psi\n&quot;&lt;&lt; endl;volScalarField psi(IOobject(&quot;psi&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);Info&lt;&lt; &quot;Reading field alpha\n&quot;&lt;&lt; endl;volScalarField alpha(IOobject(&quot;alpha&quot;, runTime.timeName(), mesh, IOobject::MUST_READ, IOobject::AUTO_WRITE), mesh);Info&lt;&lt; &quot;Reading field phi\n&quot;&lt;&lt; endl;surfaceScalarField phi(IOobject(&quot;phi&quot;, runTime.timeName(), mesh, IOobject::NO_READ, IOobject::AUTO_WRITE), mesh, dimensionedScalar(&quot;phi&quot;, dimVolume/dimTime, 0));Info&lt;&lt; &quot;Initializing field U (visualization)\n&quot;&lt;&lt; endl;volVectorField U(IOobject(&quot;U&quot;, runTime.timeName(), mesh, IOobject::NO_READ, IOobject::AUTO_WRITE), mesh, dimensionedVector(&quot;U&quot;, dimVelocity, vector(0, 0, 0)));autoPtr&lt; redistancer &gt;</type>
      <name>redist</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>a180b2f5ae1306bd76acec2600557772e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>autoPtr&lt; NarrowBand &gt;</type>
      <name>narrowBand</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>a5a58c1d0dd05316c45043970fbf98bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>autoPtr&lt; phaseIndicator &gt;</type>
      <name>phaseInd</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>ab6f3db223f93b19b9fd86f42f84818a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>autoPtr&lt; SDPLSSource &gt;</type>
      <name>source</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>a2ab5d269fadb740ea701771e8b59d7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>autoPtr&lt; velocityModel &gt;</type>
      <name>velocityModel</name>
      <anchorfile>solvers_2leiaLevelSetFoam_2createFields_8H.html</anchorfile>
      <anchor>aefb73d6da5d51e9bee19c7a0fff922b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>leiaSetFields.C</name>
    <path>/home/julian/OpenFOAM/leia2/applications/utilities/preProcessing/leiaSetFields/</path>
    <filename>leiaSetFields_8C.html</filename>
  </compound>
  <compound kind="file">
    <name>explicitGradientFvPatchField.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/finiteVolume/fields/fvPatchFields/derived/explicitGradient/</path>
    <filename>explicitGradientFvPatchField_8C.html</filename>
    <includes id="explicitGradientFvPatchField_8H" name="explicitGradientFvPatchField.H" local="yes" imported="no">explicitGradientFvPatchField.H</includes>
    <namespace>Foam</namespace>
    <member kind="define">
      <type>#define</type>
      <name>scalarNAN</name>
      <anchorfile>explicitGradientFvPatchField_8C.html</anchorfile>
      <anchor>abcf68e6c237b408c7dee7dacede13b72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>makePatchTypeField</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a20a6e0b0030565578d0ab403910ddac7</anchor>
      <arglist>(fvPatchScalarField, explicitGradientFvPatchField)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>explicitGradientFvPatchField.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/finiteVolume/fields/fvPatchFields/derived/explicitGradient/</path>
    <filename>explicitGradientFvPatchField_8H.html</filename>
    <class kind="class">Foam::explicitGradientFvPatchField</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>explicitMag1GradientFvPatchField.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/finiteVolume/fields/fvPatchFields/derived/explicitMag1Gradient/</path>
    <filename>explicitMag1GradientFvPatchField_8C.html</filename>
    <includes id="explicitMag1GradientFvPatchField_8H" name="explicitMag1GradientFvPatchField.H" local="yes" imported="no">explicitMag1GradientFvPatchField.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>makePatchTypeField</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a45f89717e19c2fbbae7890e3c1a98ab2</anchor>
      <arglist>(fvPatchScalarField, explicitMag1GradientFvPatchField)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>explicitMag1GradientFvPatchField.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/finiteVolume/fields/fvPatchFields/derived/explicitMag1Gradient/</path>
    <filename>explicitMag1GradientFvPatchField_8H.html</filename>
    <includes id="explicitGradientFvPatchField_8H" name="explicitGradientFvPatchField.H" local="yes" imported="no">explicitGradientFvPatchField.H</includes>
    <class kind="class">Foam::explicitMag1GradientFvPatchField</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>gradPsiError.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/functionObjects/gradPsiError/</path>
    <filename>gradPsiError_8C.html</filename>
    <includes id="gradPsiError_8H" name="gradPsiError.H" local="yes" imported="no">gradPsiError.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::functionObjects</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a8b774d4ecc0d1bb8410cdabc3bc7d081</anchor>
      <arglist>(gradPsiError, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a93d8171abfb96725b562df59a21a3968</anchor>
      <arglist>(functionObject, gradPsiError, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gradPsiError.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/functionObjects/gradPsiError/</path>
    <filename>gradPsiError_8H.html</filename>
    <class kind="class">Foam::functionObjects::gradPsiError</class>
    <namespace>Foam</namespace>
    <namespace>Foam::functionObjects</namespace>
  </compound>
  <compound kind="file">
    <name>gradPsiErrorCSV.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/functionObjects/gradPsiErrorCSV/</path>
    <filename>gradPsiErrorCSV_8C.html</filename>
    <includes id="gradPsiErrorCSV_8H" name="gradPsiErrorCSV.H" local="yes" imported="no">gradPsiErrorCSV.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::functionObjects</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a4d8379fccaa4f0e31d79cee2a080d4c8</anchor>
      <arglist>(gradPsiErrorCSV, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a6a74401d9ffb46bd53f737c6220ca417</anchor>
      <arglist>(functionObject, gradPsiErrorCSV, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gradPsiErrorCSV.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/functionObjects/gradPsiErrorCSV/</path>
    <filename>gradPsiErrorCSV_8H.html</filename>
    <class kind="class">Foam::functionObjects::gradPsiErrorCSV</class>
    <namespace>Foam</namespace>
    <namespace>Foam::functionObjects</namespace>
  </compound>
  <compound kind="file">
    <name>TVerrorCSV.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/functionObjects/TVerrorCSV/</path>
    <filename>TVerrorCSV_8C.html</filename>
    <includes id="TVerrorCSV_8H" name="TVerrorCSV.H" local="yes" imported="no">TVerrorCSV.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::functionObjects</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a91ccc94a44a5d2a01c9d7e60dea238c1</anchor>
      <arglist>(TVerrorCSV, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a5c199415fa72d584095e22858914ae4f</anchor>
      <arglist>(functionObject, TVerrorCSV, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TVerrorCSV.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/functionObjects/TVerrorCSV/</path>
    <filename>TVerrorCSV_8H.html</filename>
    <class kind="class">Foam::functionObjects::TVerrorCSV</class>
    <namespace>Foam</namespace>
    <namespace>Foam::functionObjects</namespace>
  </compound>
  <compound kind="file">
    <name>writeIsoSurfaceTopo.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/functionObjects/writeIsoSurfaceTopo/</path>
    <filename>writeIsoSurfaceTopo_8C.html</filename>
    <includes id="writeIsoSurfaceTopo_8H" name="writeIsoSurfaceTopo.H" local="yes" imported="no">writeIsoSurfaceTopo.H</includes>
    <namespace>Foam</namespace>
    <member kind="define">
      <type>#define</type>
      <name>namespaceFoam</name>
      <anchorfile>writeIsoSurfaceTopo_8C.html</anchorfile>
      <anchor>ab793f86758534ddf38d2048b36717f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a71c6220114d4b84ea81b06f1a65aa218</anchor>
      <arglist>(writeIsoSurfaceTopoFunctionObject, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addRemovableToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ae3bd1095ecbcdb727666b94640889e52</anchor>
      <arglist>(functionObject, writeIsoSurfaceTopoFunctionObject, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>writeIsoSurfaceTopo.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/functionObjects/writeIsoSurfaceTopo/</path>
    <filename>writeIsoSurfaceTopo_8H.html</filename>
    <class kind="class">Foam::writeIsoSurfaceTopoFunctionObject</class>
    <namespace>Foam</namespace>
    <member kind="function">
      <type>void</type>
      <name>writeIsoSurfaceTopo</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a738a4315dac1967e700e80f3b6ba1513</anchor>
      <arglist>(const fvMesh &amp;mesh, bool forceWrite)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DistanceNarrowBand.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>DistanceNarrowBand_8C.html</filename>
    <includes id="DistanceNarrowBand_8H" name="DistanceNarrowBand.H" local="yes" imported="no">DistanceNarrowBand.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a3286008f28a0c036434e59ddff8689cd</anchor>
      <arglist>(DistanceNarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa02a4084681824bad4db184ff7b413d0</anchor>
      <arglist>(NarrowBand, DistanceNarrowBand, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DistanceNarrowBand.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>DistanceNarrowBand_8H.html</filename>
    <includes id="EmptyNarrowBand_8H" name="EmptyNarrowBand.H" local="yes" imported="no">EmptyNarrowBand.H</includes>
    <class kind="class">Foam::DistanceNarrowBand</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>EmptyNarrowBand.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>EmptyNarrowBand_8C.html</filename>
    <includes id="EmptyNarrowBand_8H" name="EmptyNarrowBand.H" local="yes" imported="no">EmptyNarrowBand.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>adacd690f32c981ef82d894636a725bd4</anchor>
      <arglist>(EmptyNarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a9bfcefa171095e080ccd1ba845a7f6e0</anchor>
      <arglist>(NarrowBand, EmptyNarrowBand, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EmptyNarrowBand.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>EmptyNarrowBand_8H.html</filename>
    <includes id="NarrowBand_8H" name="NarrowBand.H" local="yes" imported="no">NarrowBand.H</includes>
    <class kind="class">Foam::EmptyNarrowBand</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>NarrowBand.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>NarrowBand_8C.html</filename>
    <includes id="NarrowBand_8H" name="NarrowBand.H" local="yes" imported="no">NarrowBand.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a64456c05e09861bbc67a018f12854e35</anchor>
      <arglist>(NarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ae9b4867f6eca2c867a66fabb9bd447f7</anchor>
      <arglist>(NarrowBand, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a33cfb14877d90fa499e0efddadff71d4</anchor>
      <arglist>(NarrowBand, NarrowBand, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NarrowBand.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>NarrowBand_8H.html</filename>
    <class kind="class">Foam::NarrowBand</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>NeighbourNarrowBand.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>NeighbourNarrowBand_8C.html</filename>
    <includes id="NeighbourNarrowBand_8H" name="NeighbourNarrowBand.H" local="yes" imported="no">NeighbourNarrowBand.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a428c3adcc6870794caf995d44e2cbef2</anchor>
      <arglist>(NeighbourNarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad2027cbe00e8ef44315e7e6d7e0e91bd</anchor>
      <arglist>(NarrowBand, NeighbourNarrowBand, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NeighbourNarrowBand.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>NeighbourNarrowBand_8H.html</filename>
    <includes id="SignChangeNarrowBand_8H" name="SignChangeNarrowBand.H" local="yes" imported="no">SignChangeNarrowBand.H</includes>
    <class kind="class">Foam::NeighbourNarrowBand</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>SignChangeNarrowBand.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>SignChangeNarrowBand_8C.html</filename>
    <includes id="SignChangeNarrowBand_8H" name="SignChangeNarrowBand.H" local="yes" imported="no">SignChangeNarrowBand.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac8ab48bd8ce047319bcd57e325a6f5fa</anchor>
      <arglist>(SignChangeNarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad04fe37b5ba3d93e49418d8ec6b990c4</anchor>
      <arglist>(NarrowBand, SignChangeNarrowBand, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SignChangeNarrowBand.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/NarrowBand/</path>
    <filename>SignChangeNarrowBand_8H.html</filename>
    <includes id="EmptyNarrowBand_8H" name="EmptyNarrowBand.H" local="yes" imported="no">EmptyNarrowBand.H</includes>
    <class kind="class">Foam::SignChangeNarrowBand</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>geometricPhaseIndicator.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/phaseIndicator/</path>
    <filename>geometricPhaseIndicator_8C.html</filename>
    <includes id="geometricPhaseIndicator_8H" name="geometricPhaseIndicator.H" local="yes" imported="no">geometricPhaseIndicator.H</includes>
    <includes id="levelSetImplicitSurfaces_8H" name="levelSetImplicitSurfaces.H" local="yes" imported="no">levelSetImplicitSurfaces.H</includes>
    <includes id="foamGeometry_8H" name="foamGeometry.H" local="yes" imported="no">foamGeometry.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ae016f3651d61dcb411e020e5f03584e9</anchor>
      <arglist>(geometricPhaseIndicator, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>af890e2ddad3972bfe1b807b2fc500713</anchor>
      <arglist>(phaseIndicator, geometricPhaseIndicator, Mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>geometricPhaseIndicator.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/phaseIndicator/</path>
    <filename>geometricPhaseIndicator_8H.html</filename>
    <includes id="phaseIndicator_8H" name="phaseIndicator.H" local="yes" imported="no">phaseIndicator.H</includes>
    <class kind="class">Foam::geometricPhaseIndicator</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>heavisidePhaseIndicator.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/phaseIndicator/</path>
    <filename>heavisidePhaseIndicator_8C.html</filename>
    <includes id="heavisidePhaseIndicator_8H" name="heavisidePhaseIndicator.H" local="yes" imported="no">heavisidePhaseIndicator.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a19cfd33f0129ce55e7e324b183aee68a</anchor>
      <arglist>(heavisidePhaseIndicator, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab486c677d1c4b01132467bd4e23c581f</anchor>
      <arglist>(phaseIndicator, heavisidePhaseIndicator, Mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>heavisidePhaseIndicator.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/phaseIndicator/</path>
    <filename>heavisidePhaseIndicator_8H.html</filename>
    <includes id="phaseIndicator_8H" name="phaseIndicator.H" local="yes" imported="no">phaseIndicator.H</includes>
    <class kind="class">Foam::heavisidePhaseIndicator</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>phaseIndicator.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/phaseIndicator/</path>
    <filename>phaseIndicator_8C.html</filename>
    <includes id="phaseIndicator_8H" name="phaseIndicator.H" local="yes" imported="no">phaseIndicator.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a61fd6f50660a21de9cd0a6faf8532a56</anchor>
      <arglist>(phaseIndicator, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa8e8fd8fc9df9850e0a950236008189a</anchor>
      <arglist>(phaseIndicator, Mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>phaseIndicator.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/phaseIndicator/</path>
    <filename>phaseIndicator_8H.html</filename>
    <class kind="class">Foam::phaseIndicator</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>sharpJumpPhaseIndicator.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/phaseIndicator/</path>
    <filename>sharpJumpPhaseIndicator_8C.html</filename>
    <includes id="sharpJumpPhaseIndicator_8H" name="sharpJumpPhaseIndicator.H" local="yes" imported="no">sharpJumpPhaseIndicator.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a1564dde37286c49684fc9e652e092696</anchor>
      <arglist>(sharpJumpPhaseIndicator, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa702af807b24e95260259ab86b7c1057</anchor>
      <arglist>(phaseIndicator, sharpJumpPhaseIndicator, Mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>sharpJumpPhaseIndicator.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/phaseIndicator/</path>
    <filename>sharpJumpPhaseIndicator_8H.html</filename>
    <includes id="phaseIndicator_8H" name="phaseIndicator.H" local="yes" imported="no">phaseIndicator.H</includes>
    <class kind="class">Foam::sharpJumpPhaseIndicator</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>profile.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/profile/</path>
    <filename>profile_8C.html</filename>
    <includes id="profile_8H" name="profile.H" local="yes" imported="no">profile.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a514e79965ccab6755e8fad3f6061e158</anchor>
      <arglist>(profile, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad7d2d7288788ed19a825ed4eb364ff66</anchor>
      <arglist>(profile, Mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>profile.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/profile/</path>
    <filename>profile_8H.html</filename>
    <includes id="levelSetImplicitSurfaces_8H" name="levelSetImplicitSurfaces.H" local="yes" imported="no">levelSetImplicitSurfaces.H</includes>
    <class kind="class">Foam::profile</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>signedDistance.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/profile/</path>
    <filename>signedDistance_8C.html</filename>
    <includes id="signedDistance_8H" name="signedDistance.H" local="yes" imported="no">signedDistance.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad3fa33f40bf3e7b946d8bcfeae2bcc0e</anchor>
      <arglist>(signedDistance, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a0820dfd894eb65f97989bb4788896982</anchor>
      <arglist>(profile, signedDistance, Mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>signedDistance.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/profile/</path>
    <filename>signedDistance_8H.html</filename>
    <includes id="profile_8H" name="profile.H" local="yes" imported="no">profile.H</includes>
    <class kind="class">Foam::signedDistance</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>tanh.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/profile/</path>
    <filename>tanh_8C.html</filename>
    <includes id="tanh_8H" name="tanh.H" local="yes" imported="no">tanh.H</includes>
    <includes id="profile_8H" name="profile.H" local="yes" imported="no">profile.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a70af40570cc8e5f4e1f6c0fe7aadf999</anchor>
      <arglist>(tanhProfile, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a3a902b1858508b9efce183b1b3d7994b</anchor>
      <arglist>(profile, tanhProfile, Mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tanh.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/profile/</path>
    <filename>tanh_8H.html</filename>
    <includes id="signedDistance_8H" name="signedDistance.H" local="yes" imported="no">signedDistance.H</includes>
    <class kind="class">Foam::tanhProfile</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>lsqRedistancer.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/redistancer/</path>
    <filename>lsqRedistancer_8C.html</filename>
    <includes id="lsqRedistancer_8H" name="lsqRedistancer.H" local="yes" imported="no">lsqRedistancer.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a58b08eb083a3646aeeddf3e6ab6bbf2e</anchor>
      <arglist>(lsqRedistancer, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab23e601fb828e2822f24ea878e5c4e08</anchor>
      <arglist>(redistancer, lsqRedistancer, Mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lsqRedistancer.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/redistancer/</path>
    <filename>lsqRedistancer_8H.html</filename>
    <includes id="redistancer_8H" name="redistancer.H" local="yes" imported="no">redistancer.H</includes>
    <class kind="class">Foam::lsqRedistancer</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>redistancer.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/redistancer/</path>
    <filename>redistancer_8C.html</filename>
    <includes id="redistancer_8H" name="redistancer.H" local="yes" imported="no">redistancer.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab4e1f0535d516df679cb63d78be854f5</anchor>
      <arglist>(redistancer, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a4aa5a88490b7a34084c6fc551051713b</anchor>
      <arglist>(redistancer, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a8fac7a43554d7d7a22d92d38c9f98db5</anchor>
      <arglist>(redistancer, redistancer, Mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>redistancer.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/redistancer/</path>
    <filename>redistancer_8H.html</filename>
    <class kind="class">Foam::redistancer</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>GradPsi.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/GradPsi/</path>
    <filename>GradPsi_8C.html</filename>
    <includes id="GradPsi_8H" name="GradPsi.H" local="yes" imported="no">GradPsi.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a21e833f8c44413bc579e69d5d9e2b730</anchor>
      <arglist>(GradPsi, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aab1b1c3a2193721315f4218e7c3c410b</anchor>
      <arglist>(GradPsi, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>afdf6cd00314438d95c61f2a8db357ba3</anchor>
      <arglist>(GradPsi, GradPsi, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GradPsi.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/GradPsi/</path>
    <filename>GradPsi_8H.html</filename>
    <class kind="class">Foam::GradPsi</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>NarrowLS.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/GradPsi/</path>
    <filename>NarrowLS_8C.html</filename>
    <includes id="NarrowLS_8H" name="NarrowLS.H" local="yes" imported="no">NarrowLS.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a2ee1f2d19d0a65a16a57ca3643852e69</anchor>
      <arglist>(NarrowLS, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aeb0fb183121657318b8321389472f565</anchor>
      <arglist>(GradPsi, NarrowLS, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NarrowLS.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/GradPsi/</path>
    <filename>NarrowLS_8H.html</filename>
    <includes id="GradPsi_8H" name="GradPsi.H" local="yes" imported="no">GradPsi.H</includes>
    <class kind="class">Foam::NarrowLS</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>Mollifier.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/Mollifier/</path>
    <filename>Mollifier_8C.html</filename>
    <includes id="Mollifier_8H" name="Mollifier.H" local="yes" imported="no">Mollifier.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aeaf04e0480afde47a7938c1eb083c6de</anchor>
      <arglist>(Mollifier, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a916937c36364d1ec8b01c8ade1182b54</anchor>
      <arglist>(Mollifier, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a17f076a668e43cfbabae8945f219f85b</anchor>
      <arglist>(Mollifier, Mollifier, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Mollifier.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/Mollifier/</path>
    <filename>Mollifier_8H.html</filename>
    <class kind="class">Foam::Mollifier</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>Mollifier1.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/Mollifier/</path>
    <filename>Mollifier1_8C.html</filename>
    <includes id="Mollifier1_8H" name="Mollifier1.H" local="yes" imported="no">Mollifier1.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a4ab44fda2911c3160198edddef1378aa</anchor>
      <arglist>(Mollifier1, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab455ad18369ae1ede6e2a4c033519cd0</anchor>
      <arglist>(Mollifier, Mollifier1, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Mollifier1.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/Mollifier/</path>
    <filename>Mollifier1_8H.html</filename>
    <includes id="Mollifier_8H" name="Mollifier.H" local="yes" imported="no">Mollifier.H</includes>
    <class kind="class">Foam::Mollifier1</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>SDPLS_lin.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__lin_8C.html</filename>
    <includes id="SDPLS__lin_8H" name="SDPLS_lin.H" local="yes" imported="no">SDPLS_lin.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad6dcca5f47a89823a012b863bbe47a1a</anchor>
      <arglist>(SDPLS_lin, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab8ccfce21badafffa4b75e48f087ce60</anchor>
      <arglist>(SDPLSSource, SDPLS_lin, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SDPLS_lin.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__lin_8H.html</filename>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <class kind="class">Foam::SDPLS_lin</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>SDPLS_quad.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__quad_8C.html</filename>
    <includes id="SDPLS__quad_8H" name="SDPLS_quad.H" local="yes" imported="no">SDPLS_quad.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6504ccabad8302192e9efd7641b1169e</anchor>
      <arglist>(SDPLS_quad, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aba13057a47b4a08078f3a0facba1feff</anchor>
      <arglist>(SDPLSSource, SDPLS_quad, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SDPLS_quad.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__quad_8H.html</filename>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <class kind="class">Foam::SDPLS_quad</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>SDPLS_R.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__R_8C.html</filename>
    <includes id="SDPLS__R_8H" name="SDPLS_R.H" local="yes" imported="no">SDPLS_R.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a8c666665b075a641993c5074ccedf345</anchor>
      <arglist>(SDPLS_R, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a95ee7062b2fa1ddc3a4a5d0afd39985c</anchor>
      <arglist>(SDPLSSource, SDPLS_R, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SDPLS_R.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__R_8H.html</filename>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <class kind="class">Foam::SDPLS_R</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>SDPLS_Rlin.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__Rlin_8C.html</filename>
    <includes id="SDPLS__Rlin_8H" name="SDPLS_Rlin.H" local="yes" imported="no">SDPLS_Rlin.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a2ce4fd872da97a672c22a8d6d5389003</anchor>
      <arglist>(SDPLS_Rlin, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a693a4ac541bab2cf350f8af0200277ab</anchor>
      <arglist>(SDPLSSource, SDPLS_Rlin, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SDPLS_Rlin.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__Rlin_8H.html</filename>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <class kind="class">Foam::SDPLS_Rlin</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>SDPLS_Rquad.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__Rquad_8C.html</filename>
    <includes id="SDPLS__Rquad_8H" name="SDPLS_Rquad.H" local="yes" imported="no">SDPLS_Rquad.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a13566e2908917915dd599c87c1c7328c</anchor>
      <arglist>(SDPLS_Rquad, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa45958229dfd90b86067dc3f4c2aea4b</anchor>
      <arglist>(SDPLSSource, SDPLS_Rquad, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SDPLS_Rquad.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLS__Rquad_8H.html</filename>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <class kind="class">Foam::SDPLS_Rquad</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>SDPLSSource.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLSSource_8C.html</filename>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <namespace>Foam</namespace>
    <namespace>Foam::fvm</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a384b2550ea3a2954c25616ae5f3dc4ac</anchor>
      <arglist>(SDPLSSource, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a1fff8586d639d27f381ba4d01ed0fcd4</anchor>
      <arglist>(SDPLSSource, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a584b1e6b5e934a0a7413c7827f72fb20</anchor>
      <arglist>(SDPLSSource, SDPLSSource, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type>tmp&lt; fvScalarMatrix &gt;</type>
      <name>SDPLSSource</name>
      <anchorfile>namespaceFoam_1_1fvm.html</anchorfile>
      <anchor>a240172bd05106479c7c0f3089961527f</anchor>
      <arglist>(const volScalarField &amp;psi, const volVectorField &amp;U)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SDPLSSource.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/</path>
    <filename>SDPLSSource_8H.html</filename>
    <includes id="SourceScheme_8H" name="SourceScheme.H" local="yes" imported="no">SourceScheme.H</includes>
    <includes id="Mollifier_8H" name="Mollifier.H" local="yes" imported="no">Mollifier.H</includes>
    <includes id="GradPsi_8H" name="GradPsi.H" local="yes" imported="no">GradPsi.H</includes>
    <class kind="class">Foam::SDPLSSource</class>
    <namespace>Foam</namespace>
    <namespace>Foam::fvm</namespace>
    <member kind="function">
      <type>tmp&lt; fvScalarMatrix &gt;</type>
      <name>SDPLSSource</name>
      <anchorfile>namespaceFoam_1_1fvm.html</anchorfile>
      <anchor>a240172bd05106479c7c0f3089961527f</anchor>
      <arglist>(const volScalarField &amp;psi, const volVectorField &amp;U)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>explicitScheme.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/SourceScheme/</path>
    <filename>explicitScheme_8C.html</filename>
    <includes id="explicitScheme_8H" name="explicitScheme.H" local="yes" imported="no">explicitScheme.H</includes>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a38a0cc9aa985de046d006a6c40b1fd0c</anchor>
      <arglist>(explicitScheme, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a3dae1fe67173efa4cbfd7ecd8bf70a88</anchor>
      <arglist>(SourceScheme, explicitScheme, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>explicitScheme.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/SourceScheme/</path>
    <filename>explicitScheme_8H.html</filename>
    <includes id="SourceScheme_8H" name="SourceScheme.H" local="yes" imported="no">SourceScheme.H</includes>
    <class kind="class">Foam::explicitScheme</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>simpleLinearImplicitScheme.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/SourceScheme/</path>
    <filename>simpleLinearImplicitScheme_8C.html</filename>
    <includes id="simpleLinearImplicitScheme_8H" name="simpleLinearImplicitScheme.H" local="yes" imported="no">simpleLinearImplicitScheme.H</includes>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>afe68eda75b13a4ccaf3bd8e0f24b425e</anchor>
      <arglist>(simpleLinearImplicitScheme, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac9cf0163f2ba90afee9e9c5ce74626bc</anchor>
      <arglist>(SourceScheme, simpleLinearImplicitScheme, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>simpleLinearImplicitScheme.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/SourceScheme/</path>
    <filename>simpleLinearImplicitScheme_8H.html</filename>
    <includes id="SourceScheme_8H" name="SourceScheme.H" local="yes" imported="no">SourceScheme.H</includes>
    <class kind="class">Foam::simpleLinearImplicitScheme</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>SourceScheme.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/SourceScheme/</path>
    <filename>SourceScheme_8C.html</filename>
    <includes id="SourceScheme_8H" name="SourceScheme.H" local="yes" imported="no">SourceScheme.H</includes>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac1cce7efdfb7e6bff88187d4807c70d6</anchor>
      <arglist>(SourceScheme, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac95e690ae80090b69344cce92e488b88</anchor>
      <arglist>(SourceScheme, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a36c18829fe8e553cbbc335e6ff335080</anchor>
      <arglist>(SourceScheme, SourceScheme, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SourceScheme.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/SourceScheme/</path>
    <filename>SourceScheme_8H.html</filename>
    <class kind="class">Foam::SourceScheme</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>strictNegativeSpLinearImplicitScheme.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/SourceScheme/</path>
    <filename>strictNegativeSpLinearImplicitScheme_8C.html</filename>
    <includes id="strictNegativeSpLinearImplicitScheme_8H" name="strictNegativeSpLinearImplicitScheme.H" local="yes" imported="no">strictNegativeSpLinearImplicitScheme.H</includes>
    <includes id="SDPLSSource_8H" name="SDPLSSource.H" local="yes" imported="no">SDPLSSource.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a2c4da6cbaa4f7dbb3adea1604c159cd3</anchor>
      <arglist>(strictNegativeSpLinearImplicitScheme, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a2f30863eed1d8ca68336556f9cc57379</anchor>
      <arglist>(SourceScheme, strictNegativeSpLinearImplicitScheme, Dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>strictNegativeSpLinearImplicitScheme.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/leiaLevelSet/SDPLSSource/SourceScheme/</path>
    <filename>strictNegativeSpLinearImplicitScheme_8H.html</filename>
    <includes id="SourceScheme_8H" name="SourceScheme.H" local="yes" imported="no">SourceScheme.H</includes>
    <class kind="class">Foam::strictNegativeSpLinearImplicitScheme</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>levelSetImplicitSurfaces.C</name>
    <path>/home/julian/OpenFOAM/leia2/src/levelSetImplicitSurfaces/</path>
    <filename>levelSetImplicitSurfaces_8C.html</filename>
    <includes id="levelSetImplicitSurfaces_8H" name="levelSetImplicitSurfaces.H" local="yes" imported="no">levelSetImplicitSurfaces.H</includes>
    <namespace>Foam</namespace>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a42396e2d89ed18301c0a9df3f08c5838</anchor>
      <arglist>(implicitSurface, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a170f3bda2d3eecc237cc5c26187fd630</anchor>
      <arglist>(implicitSurface, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa7a6cea23e97fd661bfdc8d3dfa40ff4</anchor>
      <arglist>(implicitPlane, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a914e0f8e4ee7c0d45f483cf48d529e9c</anchor>
      <arglist>(implicitSurface, implicitPlane, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a15d88d0e0e03b555fe01c4b2b2cbbd86</anchor>
      <arglist>(hesseNormalPlane, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a474568e36062f675b62c8468b1accb9c</anchor>
      <arglist>(implicitSurface, hesseNormalPlane, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a981b4b33164497b63ff9c5c276e5e32f</anchor>
      <arglist>(implicitSphere, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a18df352bbb9f690c8a25f231a5d75757</anchor>
      <arglist>(implicitSurface, implicitSphere, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a0a559d6ed841b58ea3bb979a33905835</anchor>
      <arglist>(implicitSlottedSphere, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6e69a97c424bb29b4c658e9877bade66</anchor>
      <arglist>(implicitSurface, implicitSlottedSphere, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>af6c46e61ccd0a5435930088b91d00698</anchor>
      <arglist>(implicitEllipsoid, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a80e22fb181f0c5f1ee04841006849bce</anchor>
      <arglist>(implicitSurface, implicitEllipsoid, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa83ccf2231c9d59e755479ea4a4fcaa8</anchor>
      <arglist>(implicitSinc, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6c85af302522bd239884c2d14adbc413</anchor>
      <arglist>(implicitSurface, implicitSinc, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>levelSetImplicitSurfaces.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/levelSetImplicitSurfaces/</path>
    <filename>levelSetImplicitSurfaces_8H.html</filename>
    <class kind="class">Foam::implicitSurface</class>
    <class kind="class">Foam::implicitPlane</class>
    <class kind="class">Foam::hesseNormalPlane</class>
    <class kind="class">Foam::implicitSphere</class>
    <class kind="class">Foam::implicitSlottedSphere</class>
    <class kind="class">Foam::implicitEllipsoid</class>
    <class kind="class">Foam::implicitSinc</class>
    <namespace>Foam</namespace>
  </compound>
  <compound kind="file">
    <name>foamGeometry.H</name>
    <path>/home/julian/OpenFOAM/leia2/src/vof/</path>
    <filename>foamGeometry_8H.html</filename>
    <class kind="struct">Foam::volumeArea</class>
    <namespace>Foam</namespace>
    <member kind="function">
      <type>scalar</type>
      <name>normalArea</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a20db5da3f6defbd554bcd5bb8cb5b9e6</anchor>
      <arglist>(PointSequence const &amp;points, const vector &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>point</type>
      <name>centroid</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a8b4ba40675df057a5c26a6ffbba2a522</anchor>
      <arglist>(PointSequence const &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>centroidAreaNormal</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab703af1c40feef368baf3751afc13ec6</anchor>
      <arglist>(PointSequence const &amp;points, const point &amp;centroid)</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>orientedAreaNormal</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad30a84b8f52b633342470f1de7a82d28</anchor>
      <arglist>(OrientedPointSequence const &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>Intersection</type>
      <name>intersectCell</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6487d960ee71cfbffadefec226202205</anchor>
      <arglist>(label cellL, const fvMesh &amp;mesh, ImplicitPlane plane)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::deformation3D</name>
    <filename>classFoam_1_1deformation3D.html</filename>
    <base>Foam::velocityModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1deformation3D.html</anchorfile>
      <anchor>aa0a017e94455941b5971a8aace028f00</anchor>
      <arglist>(&quot;deformation3D&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>deformation3D</name>
      <anchorfile>classFoam_1_1deformation3D.html</anchorfile>
      <anchor>ae9903285d8d5a4ad321281c4cb3a56b7</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~deformation3D</name>
      <anchorfile>classFoam_1_1deformation3D.html</anchorfile>
      <anchor>a9a881245cf61e7639867fff2fcf22807</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>velocity</name>
      <anchorfile>classFoam_1_1deformation3D.html</anchorfile>
      <anchor>a3fc90a57304aca8d4f216e9d33dc2d42</anchor>
      <arglist>(const vector &amp;p) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dictionaryContent</name>
    <filename>classdictionaryContent.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::DistanceNarrowBand</name>
    <filename>classFoam_1_1DistanceNarrowBand.html</filename>
    <base>Foam::EmptyNarrowBand</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1DistanceNarrowBand.html</anchorfile>
      <anchor>a4fc2b38782516a30683802c7fa00d6d3</anchor>
      <arglist>(&quot;distance&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DistanceNarrowBand</name>
      <anchorfile>classFoam_1_1DistanceNarrowBand.html</anchorfile>
      <anchor>a1fa1c18af52d226a97ed01653887d9d9</anchor>
      <arglist>(const dictionary &amp;dict, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DistanceNarrowBand</name>
      <anchorfile>classFoam_1_1DistanceNarrowBand.html</anchorfile>
      <anchor>a26a59c5e49fb48202625bda5f7a12f39</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calc</name>
      <anchorfile>classFoam_1_1DistanceNarrowBand.html</anchorfile>
      <anchor>a251c1e3e56296c54d6171a2cb0fef64e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>ncells_</name>
      <anchorfile>classFoam_1_1DistanceNarrowBand.html</anchorfile>
      <anchor>a559f4a942c498f81d9263cf546720939</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::EmptyNarrowBand</name>
    <filename>classFoam_1_1EmptyNarrowBand.html</filename>
    <base>Foam::NarrowBand</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1EmptyNarrowBand.html</anchorfile>
      <anchor>a233c6db350418fc6e5014a2cbbe35105</anchor>
      <arglist>(&quot;empty&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmptyNarrowBand</name>
      <anchorfile>classFoam_1_1EmptyNarrowBand.html</anchorfile>
      <anchor>a5365032e5467683f0a4fa0766245c019</anchor>
      <arglist>(const dictionary &amp;dict, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EmptyNarrowBand</name>
      <anchorfile>classFoam_1_1EmptyNarrowBand.html</anchorfile>
      <anchor>aa0efd717bb734d967151e524e6636ce7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const volScalarField &amp;</type>
      <name>field</name>
      <anchorfile>classFoam_1_1EmptyNarrowBand.html</anchorfile>
      <anchor>a5a47f51766f2fb21d091740f233cae4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>volScalarField &amp;</type>
      <name>field</name>
      <anchorfile>classFoam_1_1EmptyNarrowBand.html</anchorfile>
      <anchor>a4f6da153ac8b6968a5ff685ec09e0ee7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>write</name>
      <anchorfile>classFoam_1_1EmptyNarrowBand.html</anchorfile>
      <anchor>a359617ae7b78900e2591e3eb5421951f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>volScalarField</type>
      <name>field_</name>
      <anchorfile>classFoam_1_1EmptyNarrowBand.html</anchorfile>
      <anchor>a3b4cb69119556101fce8c960ee117893</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::explicitGradientFvPatchField</name>
    <filename>classFoam_1_1explicitGradientFvPatchField.html</filename>
    <base>fvPatchField</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a7c0356f8beec558e20da4344acd0858a</anchor>
      <arglist>(&quot;explicitGradient&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitGradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a96467afecea2dabb97f08b3266b9a9ae</anchor>
      <arglist>(const fvPatch &amp;, const DimensionedField&lt; scalar, volMesh &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitGradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a6a8db62feda076598b3771beee3fceec</anchor>
      <arglist>(const fvPatch &amp;, const DimensionedField&lt; scalar, volMesh &gt; &amp;, const dictionary &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitGradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a5cd8f2d0d99f67601d5da681068aed75</anchor>
      <arglist>(const explicitGradientFvPatchField &amp;, const fvPatch &amp;, const DimensionedField&lt; scalar, volMesh &gt; &amp;, const fvPatchFieldMapper &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitGradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>aa58cbdc69014d40c08b4675fb61bcd7d</anchor>
      <arglist>(const explicitGradientFvPatchField &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvPatchField&lt; scalar &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>ae58a0ffea0d308536c500f6a0125fe78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitGradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a7d721d5c3567c69f81e7cf19ac49d34f</anchor>
      <arglist>(const explicitGradientFvPatchField &amp;, const DimensionedField&lt; scalar, volMesh &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvPatchField&lt; scalar &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>aeb63be02eee4e7adcfc5bcad6983cdc2</anchor>
      <arglist>(const DimensionedField&lt; scalar, volMesh &gt; &amp;iF) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; Field&lt; scalar &gt; &gt;</type>
      <name>snGrad</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a3655eca8eae3c7aa32cd7d5e1baeccbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; Field&lt; vector &gt; &gt;</type>
      <name>calcGradient</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a5131bff005088169cbc51972be3bd280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; Field&lt; scalar &gt; &gt;</type>
      <name>valueInternalCoeffs</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>ac0ffac093e2ccca7db370fb631638acd</anchor>
      <arglist>(const tmp&lt; scalarField &gt; &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; Field&lt; scalar &gt; &gt;</type>
      <name>valueBoundaryCoeffs</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a3ca4942a6ebdbc73a73e3b03b26673e0</anchor>
      <arglist>(const tmp&lt; scalarField &gt; &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; Field&lt; scalar &gt; &gt;</type>
      <name>gradientInternalCoeffs</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a0ddd7ea2299890dfffbfffba0c0c60b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; Field&lt; scalar &gt; &gt;</type>
      <name>gradientBoundaryCoeffs</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>ac0dcc5d34163cce635773361d2501c4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluate</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a1a4ebfb8aa4dc581e54081a12bfbd0d3</anchor>
      <arglist>(const Pstream::commsTypes commsType=Pstream::commsTypes::blocking)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>write</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a78cec3e4ecac4a89a3ad8d38f2ad21f5</anchor>
      <arglist>(Ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Field&lt; scalar &gt;</type>
      <name>snGrad_</name>
      <anchorfile>classFoam_1_1explicitGradientFvPatchField.html</anchorfile>
      <anchor>a379d61126044a434e3b56315723aa4b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::explicitMag1GradientFvPatchField</name>
    <filename>classFoam_1_1explicitMag1GradientFvPatchField.html</filename>
    <base>Foam::explicitGradientFvPatchField</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1explicitMag1GradientFvPatchField.html</anchorfile>
      <anchor>ae67d50b628e5fc3cb2d38e81dff81802</anchor>
      <arglist>(&quot;explicitMag1Gradient&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitMag1GradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitMag1GradientFvPatchField.html</anchorfile>
      <anchor>a18682f3f2c1793cf32ea070213fcd174</anchor>
      <arglist>(const fvPatch &amp;, const DimensionedField&lt; scalar, volMesh &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitMag1GradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitMag1GradientFvPatchField.html</anchorfile>
      <anchor>a2655b2ab5e9d2fa4a307c7c3632d1866</anchor>
      <arglist>(const fvPatch &amp;, const DimensionedField&lt; scalar, volMesh &gt; &amp;, const dictionary &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitMag1GradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitMag1GradientFvPatchField.html</anchorfile>
      <anchor>a245b165ce2146a756b4933190d44f22d</anchor>
      <arglist>(const explicitMag1GradientFvPatchField &amp;, const fvPatch &amp;, const DimensionedField&lt; scalar, volMesh &gt; &amp;, const fvPatchFieldMapper &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitMag1GradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitMag1GradientFvPatchField.html</anchorfile>
      <anchor>a49f47347f4df4abacc6726068029eb40</anchor>
      <arglist>(const explicitMag1GradientFvPatchField &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvPatchField&lt; scalar &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classFoam_1_1explicitMag1GradientFvPatchField.html</anchorfile>
      <anchor>ae58a0ffea0d308536c500f6a0125fe78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitMag1GradientFvPatchField</name>
      <anchorfile>classFoam_1_1explicitMag1GradientFvPatchField.html</anchorfile>
      <anchor>a5ca3eb82e5a3cba69419a9fc4671f9d3</anchor>
      <arglist>(const explicitMag1GradientFvPatchField &amp;, const DimensionedField&lt; scalar, volMesh &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; fvPatchField&lt; scalar &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classFoam_1_1explicitMag1GradientFvPatchField.html</anchorfile>
      <anchor>aeb63be02eee4e7adcfc5bcad6983cdc2</anchor>
      <arglist>(const DimensionedField&lt; scalar, volMesh &gt; &amp;iF) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; Field&lt; vector &gt; &gt;</type>
      <name>calcGradient</name>
      <anchorfile>classFoam_1_1explicitMag1GradientFvPatchField.html</anchorfile>
      <anchor>a5131bff005088169cbc51972be3bd280</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::explicitScheme</name>
    <filename>classFoam_1_1explicitScheme.html</filename>
    <base>Foam::SourceScheme</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1explicitScheme.html</anchorfile>
      <anchor>a0b0f5335d4a67a0d5aa5a062d49cd813</anchor>
      <arglist>(&quot;explicit&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>explicitScheme</name>
      <anchorfile>classFoam_1_1explicitScheme.html</anchorfile>
      <anchor>a585b3bd1a84b1c22ceeea5059a967830</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~explicitScheme</name>
      <anchorfile>classFoam_1_1explicitScheme.html</anchorfile>
      <anchor>ab764730ff13717af317d6788b82f1eae</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSc</name>
      <anchorfile>classFoam_1_1explicitScheme.html</anchorfile>
      <anchor>a4d53deabbecc3fa7d747bc576d506e91</anchor>
      <arglist>(const volScalarField &amp;nonLinearPart, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSp</name>
      <anchorfile>classFoam_1_1explicitScheme.html</anchorfile>
      <anchor>afbedde408444a4d4d78913d3596885e8</anchor>
      <arglist>(const volScalarField &amp;nonLinearPart)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>fieldExpression</name>
    <filename>classfieldExpression.html</filename>
  </compound>
  <compound kind="class">
    <name>fvMeshFunctionObject</name>
    <filename>classfvMeshFunctionObject.html</filename>
  </compound>
  <compound kind="class">
    <name>fvPatchField</name>
    <filename>classfvPatchField.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::geometricPhaseIndicator</name>
    <filename>classFoam_1_1geometricPhaseIndicator.html</filename>
    <base>Foam::phaseIndicator</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1geometricPhaseIndicator.html</anchorfile>
      <anchor>a472a2ca8fa2db334b45955a3138b5a1d</anchor>
      <arglist>(&quot;geometric&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>geometricPhaseIndicator</name>
      <anchorfile>classFoam_1_1geometricPhaseIndicator.html</anchorfile>
      <anchor>a1619e0159d152217f02ef024c128589f</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~geometricPhaseIndicator</name>
      <anchorfile>classFoam_1_1geometricPhaseIndicator.html</anchorfile>
      <anchor>aadb729d0a835a616c9b2d68dfc4c6a4c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcPhaseIndicator</name>
      <anchorfile>classFoam_1_1geometricPhaseIndicator.html</anchorfile>
      <anchor>aea83bfccc67e19568c96a435b6e1cad5</anchor>
      <arglist>(volScalarField &amp;alpha, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const volScalarField &amp;</type>
      <name>narrowBand_</name>
      <anchorfile>classFoam_1_1geometricPhaseIndicator.html</anchorfile>
      <anchor>ac366afb0da1306767fe45fd5153e611f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tmp&lt; volVectorField &gt;</type>
      <name>ncTmp_</name>
      <anchorfile>classFoam_1_1geometricPhaseIndicator.html</anchorfile>
      <anchor>ab04f9c4de0dc2d5fcec62eb48a720059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tmp&lt; volScalarField &gt;</type>
      <name>dcTmp_</name>
      <anchorfile>classFoam_1_1geometricPhaseIndicator.html</anchorfile>
      <anchor>a6cbc540d9540bc1907ea69fad685b5e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::GradPsi</name>
    <filename>classFoam_1_1GradPsi.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1GradPsi.html</anchorfile>
      <anchor>a5a9d6105dd58932d55c2d1d727282727</anchor>
      <arglist>(&quot;fvc&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1GradPsi.html</anchorfile>
      <anchor>a24d6ad72f241b09888203ca200888c1e</anchor>
      <arglist>(autoPtr, GradPsi, Dictionary,(const fvMesh &amp;mesh),(mesh))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GradPsi</name>
      <anchorfile>classFoam_1_1GradPsi.html</anchorfile>
      <anchor>a092be309a8a96d79bfefd64d3ca6a4d8</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GradPsi</name>
      <anchorfile>classFoam_1_1GradPsi.html</anchorfile>
      <anchor>afdfd5144f059f5467a0333d4ba38ae98</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; volVectorField &gt;</type>
      <name>grad</name>
      <anchorfile>classFoam_1_1GradPsi.html</anchorfile>
      <anchor>a895475a790fbe5b50a9bd1bf8e6389ca</anchor>
      <arglist>(const volScalarField &amp;psi) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; GradPsi &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1GradPsi.html</anchorfile>
      <anchor>a0e525dae94db234e8fb076e9877fbc1a</anchor>
      <arglist>(const word type, const fvMesh &amp;mesh)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::GradPsi1</name>
    <filename>classFoam_1_1GradPsi1.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::functionObjects::gradPsiError</name>
    <filename>classFoam_1_1functionObjects_1_1gradPsiError.html</filename>
    <base>fieldExpression</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiError.html</anchorfile>
      <anchor>a583055671bd9accc298b9d6b8207e331</anchor>
      <arglist>(&quot;gradPsiError&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gradPsiError</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiError.html</anchorfile>
      <anchor>a1b552be79d381b878f9e70cd05cba01a</anchor>
      <arglist>(const word &amp;name, const Time &amp;runTime, const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gradPsiError</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiError.html</anchorfile>
      <anchor>ac1be6a3d44ae6eee94a86fe43cbce8fa</anchor>
      <arglist>(const gradPsiError &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiError.html</anchorfile>
      <anchor>aec2ca4543557049503c0071d0bd029f7</anchor>
      <arglist>(const gradPsiError &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~gradPsiError</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiError.html</anchorfile>
      <anchor>af0eb41ff46492b0b103aecb7bb71a1f5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>calcgradPsiError</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiError.html</anchorfile>
      <anchor>a2ef292a17db4350496ea4c86b9caab1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>calc</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiError.html</anchorfile>
      <anchor>a416ba87d9e4ec040bf37abe634fe3892</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::functionObjects::gradPsiErrorCSV</name>
    <filename>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</filename>
    <base>fvMeshFunctionObject</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</anchorfile>
      <anchor>abe93236a4cc2e1345ec5923ef10d7731</anchor>
      <arglist>(&quot;gradPsiErrorCSV&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gradPsiErrorCSV</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</anchorfile>
      <anchor>aa310ff6ca6ce914bd05489e4137ef6c5</anchor>
      <arglist>(const word &amp;name, const Time &amp;runTime, const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>gradPsiErrorCSV</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</anchorfile>
      <anchor>a1b0b31de9485385db71093f84d176aba</anchor>
      <arglist>(const gradPsiErrorCSV &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</anchorfile>
      <anchor>a7e2ed5619acedff2bd6454a36a1c9e8e</anchor>
      <arglist>(const gradPsiErrorCSV &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>execute</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</anchorfile>
      <anchor>a304cfd64aa086af8de5829288d82c74d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>write</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</anchorfile>
      <anchor>ae8f6374e29a250261b3979bbd6e5cb40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~gradPsiErrorCSV</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</anchorfile>
      <anchor>a0b2e4fd12717c83d1ff3a98d8f22bdf1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const volScalarField &amp;</type>
      <name>field_</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</anchorfile>
      <anchor>a2cc4aa0fff6e95012c557b8afedb03cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OFstream</type>
      <name>csvFile_</name>
      <anchorfile>classFoam_1_1functionObjects_1_1gradPsiErrorCSV.html</anchorfile>
      <anchor>a4034a69803a73c7bc5b64294d72a3909</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::heavisidePhaseIndicator</name>
    <filename>classFoam_1_1heavisidePhaseIndicator.html</filename>
    <base>Foam::phaseIndicator</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1heavisidePhaseIndicator.html</anchorfile>
      <anchor>a5af86ec1cc9792f7ea42249111579df1</anchor>
      <arglist>(&quot;heaviside&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>heavisidePhaseIndicator</name>
      <anchorfile>classFoam_1_1heavisidePhaseIndicator.html</anchorfile>
      <anchor>aca76c81b0cf4620fb12860bd2e2a3777</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~heavisidePhaseIndicator</name>
      <anchorfile>classFoam_1_1heavisidePhaseIndicator.html</anchorfile>
      <anchor>a2d66be3a55b7275d706e165d5099e7ba</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcPhaseIndicator</name>
      <anchorfile>classFoam_1_1heavisidePhaseIndicator.html</anchorfile>
      <anchor>aea83bfccc67e19568c96a435b6e1cad5</anchor>
      <arglist>(volScalarField &amp;alpha, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>label</type>
      <name>nCells_</name>
      <anchorfile>classFoam_1_1heavisidePhaseIndicator.html</anchorfile>
      <anchor>a0129a6331cda6b6dd0cbc59d4e4a37c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::hesseNormalPlane</name>
    <filename>classFoam_1_1hesseNormalPlane.html</filename>
    <base>Foam::implicitSurface</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>a618fd72c1cc0334a5bf8db03c4d73594</anchor>
      <arglist>(&quot;hesseNormalPlane&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hesseNormalPlane</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>a9004802e9eba0a7170f5c914f45af6f4</anchor>
      <arglist>(vector n, scalar d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>hesseNormalPlane</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>a044bc1bda81a621db74734b99d51e7c1</anchor>
      <arglist>(const dictionary &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>afd75110375d5a7f673003f5ca0949b8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>grad</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>ae8a2dc10148707498bc4a7ec60335408</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>curvature</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>a02f37321b8ac5b33ed606f38b97a2a8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>const vector &amp;</type>
      <name>normal</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>ac96975297b5f09d54a37b6c93b9e3b77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>cutoff</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>a934a71f03d98220191546feffa639934</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>n_</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>aba4074ba45f0937a598ed70023f3801f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>d_</name>
      <anchorfile>classFoam_1_1hesseNormalPlane.html</anchorfile>
      <anchor>a77548ab78356393d2dd09f0f8b80c9eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::implicitEllipsoid</name>
    <filename>classFoam_1_1implicitEllipsoid.html</filename>
    <base>Foam::implicitSurface</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>a6becf012add4f3a9be666923afd389f0</anchor>
      <arglist>(&quot;implicitEllipsoid&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitEllipsoid</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>a421c821c88731fcad70fa2c07fa3b064</anchor>
      <arglist>(vector center, vector axes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitEllipsoid</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>aaaccd039527480e0faae9e421f548e56</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~implicitEllipsoid</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>a7c44ed1cfb9aee2adac3e1efa6bfb42d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>afd75110375d5a7f673003f5ca0949b8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>grad</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>ae8a2dc10148707498bc4a7ec60335408</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>curvature</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>a02f37321b8ac5b33ed606f38b97a2a8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>center</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>a6191677d21ecabf5e95280c1f28e2a6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>axes</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>af3ae65cc6aa8bff9e7372f6a0c37a39e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setAxesSqr</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>a31977917fb4d358b069538b5c626bbed</anchor>
      <arglist>(const vector &amp;axes)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>center_</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>af4818b6350a3469b91442ade78ca779a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>axes_</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>a26b2c0b678c69955c73deab4d8abf2ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>axesSqr_</name>
      <anchorfile>classFoam_1_1implicitEllipsoid.html</anchorfile>
      <anchor>a4749bbf16e9f63732b7ed68f77513205</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::implicitPlane</name>
    <filename>classFoam_1_1implicitPlane.html</filename>
    <base>Foam::implicitSurface</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>a8700041d2585081afb8ece3afb4b847b</anchor>
      <arglist>(&quot;implicitPlane&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitPlane</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>a949e9cb8d1bccf5239e1325dda3a5c59</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitPlane</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>a1208551e200420d1d2b06d2a45c3e384</anchor>
      <arglist>(vector position, vector normal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitPlane</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>ab948cb16047df2ef9c344ab235959f2a</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~implicitPlane</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>a6a7932d8006dd0d5cc62a937029b71fd</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>afd75110375d5a7f673003f5ca0949b8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>grad</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>ae8a2dc10148707498bc4a7ec60335408</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>curvature</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>a02f37321b8ac5b33ed606f38b97a2a8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>position</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>a67601a253726de6c12056e552292db52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>normal</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>a9e5e063dac5472a243c77297956d4364</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>position_</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>a9425ea6e6759c5d57dc76aac972f924a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>normal_</name>
      <anchorfile>classFoam_1_1implicitPlane.html</anchorfile>
      <anchor>a68ba936fed407e332ca1874fb1eb2856</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::implicitSinc</name>
    <filename>classFoam_1_1implicitSinc.html</filename>
    <base>Foam::implicitSurface</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>ad02db7ea833de9bba0464abf07d87248</anchor>
      <arglist>(&quot;implicitSinc&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSinc</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>ae626b40f91673347627f1c84c554c6e5</anchor>
      <arglist>(vector origin, scalar amplitude, scalar omega)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSinc</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>a81959775c6c03f4ecf70b4dd47068259</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~implicitSinc</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>adc7fc2fb1ed7b7a82c5fd2d1aee0254f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>afd75110375d5a7f673003f5ca0949b8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>grad</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>ae8a2dc10148707498bc4a7ec60335408</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>curvature</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>a02f37321b8ac5b33ed606f38b97a2a8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>origin</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>ac2dfea91984b42739d1cbb34b65a03dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>amplitude</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>abfabc583bba97e8b0ecbed47869d208d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>omega</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>a1ee0d4e4b0cbd7f1fddf21217292f519</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>origin_</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>a48e05ce0af2ef097ca058a78d20ff1df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>amplitude_</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>acb013bb217c1406b876ae0bc54d31158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>omega_</name>
      <anchorfile>classFoam_1_1implicitSinc.html</anchorfile>
      <anchor>a02b94fd07492cfb49fd269d1cf13a4ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::implicitSlottedSphere</name>
    <filename>classFoam_1_1implicitSlottedSphere.html</filename>
    <base>Foam::implicitSurface</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a61e71b2ad8e3539c3600fb37e9c72a55</anchor>
      <arglist>(&quot;slottedSphere&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSlottedSphere</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a9383b459434837956c2257e05ad7767d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSlottedSphere</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>afb3363e523d3a9a41f8d45ffb9cd3245</anchor>
      <arglist>(vector center, scalar radius, vector minSlotCorner, vector maxSlotCorner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSlottedSphere</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a99b4af40c8bc0edb8a05bf0380cbe525</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~implicitSlottedSphere</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a09cec3a6a9162d86d80cab3f085a99b5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>afd75110375d5a7f673003f5ca0949b8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>grad</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>ae8a2dc10148707498bc4a7ec60335408</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>curvature</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a02f37321b8ac5b33ed606f38b97a2a8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>center</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a6191677d21ecabf5e95280c1f28e2a6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>radius</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a0da9f4ce1490896cf2e75bfb4db34fa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>minSlotCorner</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a3a140e94206b5566cc6a71ec350680f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>maxSlotCorner</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a6d597b70eabd756e731483e78f0a0dd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>center_</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>af4818b6350a3469b91442ade78ca779a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>radius_</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a98baaba6ae38f3c7129cdb6bb38bc547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>minSlotCorner_</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a41c0ed7112b9f3ed587fbcc83935e82b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>maxSlotCorner_</name>
      <anchorfile>classFoam_1_1implicitSlottedSphere.html</anchorfile>
      <anchor>a5b76d261e6a80719f8086c8252217e3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::implicitSphere</name>
    <filename>classFoam_1_1implicitSphere.html</filename>
    <base>Foam::implicitSurface</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>a23c6d292b079d41257c6c23d12ae43f5</anchor>
      <arglist>(&quot;implicitSphere&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSphere</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>a607eb2e9beb7489c723b4a5e23d713be</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSphere</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>a5e6f117dd0bae1bb92ed20b91da76f4b</anchor>
      <arglist>(vector center, scalar radius)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSphere</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>ad32d9644b9329dd404f2d65e06189f2e</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~implicitSphere</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>abfe93f56c756c8f8c4f61ba6936f51b1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>afd75110375d5a7f673003f5ca0949b8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>grad</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>ae8a2dc10148707498bc4a7ec60335408</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>curvature</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>a02f37321b8ac5b33ed606f38b97a2a8d</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>center</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>a6191677d21ecabf5e95280c1f28e2a6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>radius</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>a0da9f4ce1490896cf2e75bfb4db34fa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>center_</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>af4818b6350a3469b91442ade78ca779a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>radius_</name>
      <anchorfile>classFoam_1_1implicitSphere.html</anchorfile>
      <anchor>a98baaba6ae38f3c7129cdb6bb38bc547</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::implicitSurface</name>
    <filename>classFoam_1_1implicitSurface.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1implicitSurface.html</anchorfile>
      <anchor>aeaf8361710ee687d8e10211984fde54d</anchor>
      <arglist>(&quot;implicitSurface&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1implicitSurface.html</anchorfile>
      <anchor>ac9a492f95abe0dcd72a229b9e0c93b43</anchor>
      <arglist>(autoPtr, implicitSurface, dictionary,(const dictionary &amp;dict),(dict))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSurface</name>
      <anchorfile>classFoam_1_1implicitSurface.html</anchorfile>
      <anchor>a463ec57d01eea04811de035cc872610a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>implicitSurface</name>
      <anchorfile>classFoam_1_1implicitSurface.html</anchorfile>
      <anchor>a068bc5aa4748bdfa8d0aadb582dbc675</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~implicitSurface</name>
      <anchorfile>classFoam_1_1implicitSurface.html</anchorfile>
      <anchor>aab325a2f5566f0bad615f85f515e3cdf</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1implicitSurface.html</anchorfile>
      <anchor>ab9b7881f27b19149252409d5d223e7e0</anchor>
      <arglist>(const vector &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual vector</type>
      <name>grad</name>
      <anchorfile>classFoam_1_1implicitSurface.html</anchorfile>
      <anchor>a823b516683a702d5eb8eb344b2aaebd6</anchor>
      <arglist>(const vector &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual scalar</type>
      <name>curvature</name>
      <anchorfile>classFoam_1_1implicitSurface.html</anchorfile>
      <anchor>af85f47a71c30a0914a934794c77a9943</anchor>
      <arglist>(const vector &amp;) const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; implicitSurface &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1implicitSurface.html</anchorfile>
      <anchor>a3a2feafeceb67b504db9142b59e8c334</anchor>
      <arglist>(const word &amp;name, const dictionary &amp;dict)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::lsqRedistancer</name>
    <filename>classFoam_1_1lsqRedistancer.html</filename>
    <base>Foam::redistancer</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1lsqRedistancer.html</anchorfile>
      <anchor>ac0fd73e74a663d6cb000603554910079</anchor>
      <arglist>(&quot;linearLeastSquares&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>lsqRedistancer</name>
      <anchorfile>classFoam_1_1lsqRedistancer.html</anchorfile>
      <anchor>ad7b2a49d2b5d30569627b443112983b7</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~lsqRedistancer</name>
      <anchorfile>classFoam_1_1lsqRedistancer.html</anchorfile>
      <anchor>a4d251096ef2df1ac41389aa719d05b34</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>redistance</name>
      <anchorfile>classFoam_1_1lsqRedistancer.html</anchorfile>
      <anchor>aeaf820620248724f02e044dba94ac102</anchor>
      <arglist>(volScalarField &amp;psi)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::Mollifier</name>
    <filename>classFoam_1_1Mollifier.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1Mollifier.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1Mollifier.html</anchorfile>
      <anchor>a3da0454d791a6b73c4b7f2d1ef7bf43e</anchor>
      <arglist>(autoPtr, Mollifier, Dictionary,(const dictionary &amp;dict),(dict))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mollifier</name>
      <anchorfile>classFoam_1_1Mollifier.html</anchorfile>
      <anchor>a87279d9bdc407abf64588b8c1cfc9e2e</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Mollifier</name>
      <anchorfile>classFoam_1_1Mollifier.html</anchorfile>
      <anchor>a851af1a918a7fdbdc1cacf77e09734b2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>tmp&lt; volScalarField &gt;</type>
      <name>field</name>
      <anchorfile>classFoam_1_1Mollifier.html</anchorfile>
      <anchor>a12bc88e425baf70aabe176514f8a497e</anchor>
      <arglist>(const volScalarField &amp;psi) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; Mollifier &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1Mollifier.html</anchorfile>
      <anchor>a3624bb62c9e7e8f4e99e3b86a5d0a7b6</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>mollify</name>
      <anchorfile>classFoam_1_1Mollifier.html</anchorfile>
      <anchor>a76df394e9393689fafa95e7907f5f720</anchor>
      <arglist>(double x) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::Mollifier1</name>
    <filename>classFoam_1_1Mollifier1.html</filename>
    <base>Foam::Mollifier</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1Mollifier1.html</anchorfile>
      <anchor>a31886b1a9ee5900ad7217113e13a6d9e</anchor>
      <arglist>(&quot;m1&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mollifier1</name>
      <anchorfile>classFoam_1_1Mollifier1.html</anchorfile>
      <anchor>a14b3574bc8b9a887d8bf4a51428911ee</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Mollifier1</name>
      <anchorfile>classFoam_1_1Mollifier1.html</anchorfile>
      <anchor>a395df5fb90612dcb063fe3725a6e1831</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>mollify</name>
      <anchorfile>classFoam_1_1Mollifier1.html</anchorfile>
      <anchor>a76df394e9393689fafa95e7907f5f720</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>w1_</name>
      <anchorfile>classFoam_1_1Mollifier1.html</anchorfile>
      <anchor>a2b2a281df0fbdaaa42974052d9ff90c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>w2_</name>
      <anchorfile>classFoam_1_1Mollifier1.html</anchorfile>
      <anchor>a1fc0fe9dde28bb8067e7fe2e6a1aa39b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::Mollifier11</name>
    <filename>classFoam_1_1Mollifier11.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::NarrowBand</name>
    <filename>classFoam_1_1NarrowBand.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>aad6cfb42b1e5509711021eae5dc96b08</anchor>
      <arglist>(autoPtr, NarrowBand, Dictionary,(const dictionary &amp;dict, const volScalarField &amp;psi),(dict, psi))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NarrowBand</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>a06e9de2db4975bf6f826b7f2a32037b4</anchor>
      <arglist>(const dictionary &amp;dict, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NarrowBand</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>a027faf8b86fd7628420f96d7142f5a8b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const fvMesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>aab8ef4470d7d6fd79e1cf62023ec7bc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const volScalarField &amp;</type>
      <name>psi</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>a55325765e6e6dc1d7fcf0d434633daee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calc</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>a251c1e3e56296c54d6171a2cb0fef64e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>write</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>a359617ae7b78900e2591e3eb5421951f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; NarrowBand &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>a0077f146c09fd0b33b8363b53878fa65</anchor>
      <arglist>(const fvMesh &amp;mesh, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const fvMesh &amp;</type>
      <name>mesh_</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>a23edeeeecebcef11921a33dd5d990570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const volScalarField &amp;</type>
      <name>psi_</name>
      <anchorfile>classFoam_1_1NarrowBand.html</anchorfile>
      <anchor>acbd601c79a0186f6db9acc14e24474f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::NarrowLS</name>
    <filename>classFoam_1_1NarrowLS.html</filename>
    <base>Foam::GradPsi</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1NarrowLS.html</anchorfile>
      <anchor>a1f5da8aca4731ff9c16802435e06fdde</anchor>
      <arglist>(&quot;narrowLS&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NarrowLS</name>
      <anchorfile>classFoam_1_1NarrowLS.html</anchorfile>
      <anchor>a2bae7415882f232291bffc349fb9c155</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NarrowLS</name>
      <anchorfile>classFoam_1_1NarrowLS.html</anchorfile>
      <anchor>a12d8ee92628f8348b827fa84f57f3686</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; volVectorField &gt;</type>
      <name>grad</name>
      <anchorfile>classFoam_1_1NarrowLS.html</anchorfile>
      <anchor>a895475a790fbe5b50a9bd1bf8e6389ca</anchor>
      <arglist>(const volScalarField &amp;psi) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const volScalarField &amp;</type>
      <name>narrowBand_</name>
      <anchorfile>classFoam_1_1NarrowLS.html</anchorfile>
      <anchor>ac366afb0da1306767fe45fd5153e611f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const volVectorField &amp;</type>
      <name>nc_</name>
      <anchorfile>classFoam_1_1NarrowLS.html</anchorfile>
      <anchor>a9b4ea3beb1b77d41e9dbc5b57b05f774</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::NarrowLS1</name>
    <filename>classFoam_1_1NarrowLS1.html</filename>
  </compound>
  <compound kind="class">
    <name>Foam::NeighbourNarrowBand</name>
    <filename>classFoam_1_1NeighbourNarrowBand.html</filename>
    <base>Foam::SignChangeNarrowBand</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1NeighbourNarrowBand.html</anchorfile>
      <anchor>a56b6cc59acb4c7448fcc174d1c62bb03</anchor>
      <arglist>(&quot;neighbours&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeighbourNarrowBand</name>
      <anchorfile>classFoam_1_1NeighbourNarrowBand.html</anchorfile>
      <anchor>a3c115d621947727681693dafaaf01ccf</anchor>
      <arglist>(const dictionary &amp;dict, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NeighbourNarrowBand</name>
      <anchorfile>classFoam_1_1NeighbourNarrowBand.html</anchorfile>
      <anchor>afdb089d5e7c2d266b73b3633dcaf2c83</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calc</name>
      <anchorfile>classFoam_1_1NeighbourNarrowBand.html</anchorfile>
      <anchor>a251c1e3e56296c54d6171a2cb0fef64e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>ntimes_</name>
      <anchorfile>classFoam_1_1NeighbourNarrowBand.html</anchorfile>
      <anchor>a042acd65499a1557fe72739b54cd19bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::periodic2D</name>
    <filename>classFoam_1_1periodic2D.html</filename>
    <base>Foam::velocityModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1periodic2D.html</anchorfile>
      <anchor>a2a025768c1402d53f99523a572227535</anchor>
      <arglist>(&quot;periodic2D&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>periodic2D</name>
      <anchorfile>classFoam_1_1periodic2D.html</anchorfile>
      <anchor>a654ea35077bfec4930f5c39bc5a35812</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~periodic2D</name>
      <anchorfile>classFoam_1_1periodic2D.html</anchorfile>
      <anchor>aad7c26e47405187d3fb1d8179413ae20</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>velocity</name>
      <anchorfile>classFoam_1_1periodic2D.html</anchorfile>
      <anchor>a3fc90a57304aca8d4f216e9d33dc2d42</anchor>
      <arglist>(const vector &amp;p) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>v0_</name>
      <anchorfile>classFoam_1_1periodic2D.html</anchorfile>
      <anchor>a576703fb069eeca1946a1c4d0f2e5be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>c1_</name>
      <anchorfile>classFoam_1_1periodic2D.html</anchorfile>
      <anchor>afd7c733700761f96feb09d612aff7303</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>c2_</name>
      <anchorfile>classFoam_1_1periodic2D.html</anchorfile>
      <anchor>aaf02c40098c59e13bba4addf8109a488</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::phaseIndicator</name>
    <filename>classFoam_1_1phaseIndicator.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1phaseIndicator.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1phaseIndicator.html</anchorfile>
      <anchor>acec44bc1a943918db2ac6fb468c78cb6</anchor>
      <arglist>(autoPtr, phaseIndicator, Mesh,(const fvMesh &amp;mesh),(mesh))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>phaseIndicator</name>
      <anchorfile>classFoam_1_1phaseIndicator.html</anchorfile>
      <anchor>abed1425d29cf782dfb1be031f3749840</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~phaseIndicator</name>
      <anchorfile>classFoam_1_1phaseIndicator.html</anchorfile>
      <anchor>a48b15d6744519ed2abe2600e7509116b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcPhaseIndicator</name>
      <anchorfile>classFoam_1_1phaseIndicator.html</anchorfile>
      <anchor>a7796d12b53a99da16798c780ba063f05</anchor>
      <arglist>(volScalarField &amp;alpha, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; phaseIndicator &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1phaseIndicator.html</anchorfile>
      <anchor>afa2128e3d67045bd72b57fc5818ddbc1</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const fvSolution &amp;</type>
      <name>fvSolution_</name>
      <anchorfile>classFoam_1_1phaseIndicator.html</anchorfile>
      <anchor>af11be4d850f43e196ccb23ecb919374e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>levelSetDict_</name>
      <anchorfile>classFoam_1_1phaseIndicator.html</anchorfile>
      <anchor>a61c34a87a9968843addd05b5243c791c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>phaseIndDict_</name>
      <anchorfile>classFoam_1_1phaseIndicator.html</anchorfile>
      <anchor>a7bb2788d71bf00ab73903aa639a5299a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::profile</name>
    <filename>classFoam_1_1profile.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>afd56228ecf29bd7e8d162fd998433bef</anchor>
      <arglist>(autoPtr, profile, Mesh,(const fvMesh &amp;mesh, const implicitSurface &amp;surface),(mesh, surface))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>profile</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>a9249b8b8c560be95915635bceec0897d</anchor>
      <arglist>(const fvMesh &amp;mesh, const implicitSurface &amp;surface)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~profile</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>a03a087c1cd4c0b89ccb0224804cb4bc6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>abcf3ad36ba96239704fc930f6cf094fd</anchor>
      <arglist>(const vector point) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; profile &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>ac96feecbccdd551742875754256f2746</anchor>
      <arglist>(const fvMesh &amp;mesh, const implicitSurface &amp;surface)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const fvSolution &amp;</type>
      <name>fvSolution_</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>af11be4d850f43e196ccb23ecb919374e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>levelSetDict_</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>a61c34a87a9968843addd05b5243c791c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>profileDict_</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>af9e979fd5fb92f357ddd6b521d8fffb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const implicitSurface &amp;</type>
      <name>surface_</name>
      <anchorfile>classFoam_1_1profile.html</anchorfile>
      <anchor>a6a9c3df49b656107208bfe974f31f523</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::redistancer</name>
    <filename>classFoam_1_1redistancer.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1redistancer.html</anchorfile>
      <anchor>a3e5b2313f83fb3742c4ea0190b1cdaac</anchor>
      <arglist>(&quot;noRedistancing&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1redistancer.html</anchorfile>
      <anchor>ab38066e91c54c6bdf68e1d1a823a8a62</anchor>
      <arglist>(autoPtr, redistancer, Mesh,(const fvMesh &amp;mesh),(mesh))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>redistancer</name>
      <anchorfile>classFoam_1_1redistancer.html</anchorfile>
      <anchor>a4555404de0e899db6425f29a491e80c2</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~redistancer</name>
      <anchorfile>classFoam_1_1redistancer.html</anchorfile>
      <anchor>ae8dd8824446d0ede70d6a72cf2f04611</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>redistance</name>
      <anchorfile>classFoam_1_1redistancer.html</anchorfile>
      <anchor>a565cea601b5cdaf7b2ad7fe010714e53</anchor>
      <arglist>(volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; redistancer &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1redistancer.html</anchorfile>
      <anchor>aabdb7c3f0a758df1866806157d5e8181</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const fvSolution &amp;</type>
      <name>fvSolution_</name>
      <anchorfile>classFoam_1_1redistancer.html</anchorfile>
      <anchor>af11be4d850f43e196ccb23ecb919374e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>levelSetDict_</name>
      <anchorfile>classFoam_1_1redistancer.html</anchorfile>
      <anchor>a61c34a87a9968843addd05b5243c791c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>redistDict_</name>
      <anchorfile>classFoam_1_1redistancer.html</anchorfile>
      <anchor>ab303cb7404fa1e98779a82bcf4b483c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::rotation</name>
    <filename>classFoam_1_1rotation.html</filename>
    <base>Foam::velocityModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1rotation.html</anchorfile>
      <anchor>ac7a0eb9b6feb0f21a99f4be6cd253d18</anchor>
      <arglist>(&quot;rotation&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>rotation</name>
      <anchorfile>classFoam_1_1rotation.html</anchorfile>
      <anchor>aa671b8c56d6a0d7e1ed417ff28fe6936</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~rotation</name>
      <anchorfile>classFoam_1_1rotation.html</anchorfile>
      <anchor>a1cf1adbf19e07966b9675e5351087015</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>velocity</name>
      <anchorfile>classFoam_1_1rotation.html</anchorfile>
      <anchor>a3fc90a57304aca8d4f216e9d33dc2d42</anchor>
      <arglist>(const vector &amp;p) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>point_</name>
      <anchorfile>classFoam_1_1rotation.html</anchorfile>
      <anchor>a47a2edc1f8a40bab4931aa0295648c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>omega_</name>
      <anchorfile>classFoam_1_1rotation.html</anchorfile>
      <anchor>a22c60b5fd2021a351fd634db335b55dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::SDPLS_lin</name>
    <filename>classFoam_1_1SDPLS__lin.html</filename>
    <base>Foam::SDPLSSource</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1SDPLS__lin.html</anchorfile>
      <anchor>a364cac4fc9ba10ae65ce50594f1c3fa7</anchor>
      <arglist>(&quot;lin&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SDPLS_lin</name>
      <anchorfile>classFoam_1_1SDPLS__lin.html</anchorfile>
      <anchor>aeae54d758db6849ce70fb57958226bfe</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SDPLS_lin</name>
      <anchorfile>classFoam_1_1SDPLS__lin.html</anchorfile>
      <anchor>a32479d8975ccdc838048a8d6957e1a26</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; volScalarField &gt;</type>
      <name>nonLinearPart</name>
      <anchorfile>classFoam_1_1SDPLS__lin.html</anchorfile>
      <anchor>acbfa906d29f0390bb1b529561314da48</anchor>
      <arglist>(const volScalarField &amp;R, const volScalarField &amp;psi, const volVectorField &amp;U) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::SDPLS_quad</name>
    <filename>classFoam_1_1SDPLS__quad.html</filename>
    <base>Foam::SDPLSSource</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1SDPLS__quad.html</anchorfile>
      <anchor>ab914ee57f0d47ffce3b81fe82fc9f86e</anchor>
      <arglist>(&quot;quad&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SDPLS_quad</name>
      <anchorfile>classFoam_1_1SDPLS__quad.html</anchorfile>
      <anchor>a8827c325666395ee3d95df5a44b2f9ff</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SDPLS_quad</name>
      <anchorfile>classFoam_1_1SDPLS__quad.html</anchorfile>
      <anchor>a0a8473bcba7603d4ae954e1b38c305cd</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; volScalarField &gt;</type>
      <name>nonLinearPart</name>
      <anchorfile>classFoam_1_1SDPLS__quad.html</anchorfile>
      <anchor>acbfa906d29f0390bb1b529561314da48</anchor>
      <arglist>(const volScalarField &amp;R, const volScalarField &amp;psi, const volVectorField &amp;U) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::SDPLS_R</name>
    <filename>classFoam_1_1SDPLS__R.html</filename>
    <base>Foam::SDPLSSource</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1SDPLS__R.html</anchorfile>
      <anchor>ac71e37a0b3330c661c40719177fa786f</anchor>
      <arglist>(&quot;R&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SDPLS_R</name>
      <anchorfile>classFoam_1_1SDPLS__R.html</anchorfile>
      <anchor>ace857c2da14f7bad2f193cd2efa0fc40</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SDPLS_R</name>
      <anchorfile>classFoam_1_1SDPLS__R.html</anchorfile>
      <anchor>ac081ab9a24cefebcff07765b92e38245</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; volScalarField &gt;</type>
      <name>nonLinearPart</name>
      <anchorfile>classFoam_1_1SDPLS__R.html</anchorfile>
      <anchor>acbfa906d29f0390bb1b529561314da48</anchor>
      <arglist>(const volScalarField &amp;R, const volScalarField &amp;psi, const volVectorField &amp;U) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::SDPLS_Rlin</name>
    <filename>classFoam_1_1SDPLS__Rlin.html</filename>
    <base>Foam::SDPLSSource</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1SDPLS__Rlin.html</anchorfile>
      <anchor>a35b960d22b9b4fd3e7dbbc3752d72a82</anchor>
      <arglist>(&quot;Rlin&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SDPLS_Rlin</name>
      <anchorfile>classFoam_1_1SDPLS__Rlin.html</anchorfile>
      <anchor>a354d52031afafd4d87cccc63e5f058e7</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SDPLS_Rlin</name>
      <anchorfile>classFoam_1_1SDPLS__Rlin.html</anchorfile>
      <anchor>acde84aa96cd32935ccb763e27e23b692</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; volScalarField &gt;</type>
      <name>nonLinearPart</name>
      <anchorfile>classFoam_1_1SDPLS__Rlin.html</anchorfile>
      <anchor>acbfa906d29f0390bb1b529561314da48</anchor>
      <arglist>(const volScalarField &amp;R, const volScalarField &amp;psi, const volVectorField &amp;U) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::SDPLS_Rquad</name>
    <filename>classFoam_1_1SDPLS__Rquad.html</filename>
    <base>Foam::SDPLSSource</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1SDPLS__Rquad.html</anchorfile>
      <anchor>a1e4c1a962a90be6e994384d5cde51c56</anchor>
      <arglist>(&quot;Rquad&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SDPLS_Rquad</name>
      <anchorfile>classFoam_1_1SDPLS__Rquad.html</anchorfile>
      <anchor>a83281870c37fe876a6fd4f3d1d5e5982</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SDPLS_Rquad</name>
      <anchorfile>classFoam_1_1SDPLS__Rquad.html</anchorfile>
      <anchor>a5a5157a662a9d6155b1addf3ff752e96</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tmp&lt; volScalarField &gt;</type>
      <name>nonLinearPart</name>
      <anchorfile>classFoam_1_1SDPLS__Rquad.html</anchorfile>
      <anchor>acbfa906d29f0390bb1b529561314da48</anchor>
      <arglist>(const volScalarField &amp;R, const volScalarField &amp;psi, const volVectorField &amp;U) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::SDPLSSource</name>
    <filename>classFoam_1_1SDPLSSource.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>aeae28aff931a85f9aa00896382f9197a</anchor>
      <arglist>(&quot;noSource&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a039bf53586ab1c1f43fbee8e42120753</anchor>
      <arglist>(autoPtr, SDPLSSource, Dictionary,(const dictionary &amp;dict, const fvMesh &amp;mesh),(dict, mesh))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SDPLSSource</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a70ae98ec3eca90f5e4b415d24a4ad849</anchor>
      <arglist>(const dictionary &amp;dict, const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SDPLSSource</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a2cb5d8d3f3bd81f9aa3f63e1d34e80e8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>tmp&lt; fvScalarMatrix &gt;</type>
      <name>fvmSDPLSSource</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a6b5ad9ef2c399ff536fe684d53fdc168</anchor>
      <arglist>(const volScalarField &amp;psi, const volVectorField &amp;U)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a4c0b58b1705df215b0bdffba8dc61185</anchor>
      <arglist>(const volScalarField &amp;psi, const volVectorField &amp;U)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a359617ae7b78900e2591e3eb5421951f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; SDPLSSource &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a1e6002cc5ea6b5e10200cebfb061ecd7</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual tmp&lt; volScalarField &gt;</type>
      <name>nonLinearPart</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>acbfa906d29f0390bb1b529561314da48</anchor>
      <arglist>(const volScalarField &amp;R, const volScalarField &amp;psi, const volVectorField &amp;U) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tmp&lt; volVectorField &gt;</type>
      <name>gradPsi</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>aa3da1c3b0b745203741988e0c9437cc2</anchor>
      <arglist>(const volScalarField &amp;psi) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>tmp&lt; volScalarField &gt;</type>
      <name>R</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a758345530da99d55ed8b45c215f424f1</anchor>
      <arglist>(const volScalarField &amp;psi, const volVectorField &amp;U) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>autoPtr&lt; SourceScheme &gt;</type>
      <name>discretization_</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a44775fcdb5de5714f4df117b1628d01d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>autoPtr&lt; GradPsi &gt;</type>
      <name>gradPsi_</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a26e3f07c9b9dd0ac27b8f92491db0dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>autoPtr&lt; Mollifier &gt;</type>
      <name>mollifier_</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>ae6474a2b9c986ab0d018c3a662a8ed25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>volScalarField</type>
      <name>R_</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a1fedd0998a8f04caf63d703710237e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>volScalarField</type>
      <name>nonLinearPart_</name>
      <anchorfile>classFoam_1_1SDPLSSource.html</anchorfile>
      <anchor>a867a5f0977eeb891cb61a5c5ff6f8e41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::sharpJumpPhaseIndicator</name>
    <filename>classFoam_1_1sharpJumpPhaseIndicator.html</filename>
    <base>Foam::phaseIndicator</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1sharpJumpPhaseIndicator.html</anchorfile>
      <anchor>acf2e796cf2b0883b5a58af5c12dc5bb1</anchor>
      <arglist>(&quot;sharpJump&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sharpJumpPhaseIndicator</name>
      <anchorfile>classFoam_1_1sharpJumpPhaseIndicator.html</anchorfile>
      <anchor>affb36639cd6e14cf8e89a1018d04ef19</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~sharpJumpPhaseIndicator</name>
      <anchorfile>classFoam_1_1sharpJumpPhaseIndicator.html</anchorfile>
      <anchor>ab70e49c231a575851128a16783c5690f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calcPhaseIndicator</name>
      <anchorfile>classFoam_1_1sharpJumpPhaseIndicator.html</anchorfile>
      <anchor>aea83bfccc67e19568c96a435b6e1cad5</anchor>
      <arglist>(volScalarField &amp;alpha, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>label</type>
      <name>nAverages_</name>
      <anchorfile>classFoam_1_1sharpJumpPhaseIndicator.html</anchorfile>
      <anchor>ae745b07ccdc15cf00651051de00206f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::shear2D</name>
    <filename>classFoam_1_1shear2D.html</filename>
    <base>Foam::velocityModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1shear2D.html</anchorfile>
      <anchor>ae0c23f92bb290d79bc6019f9880535f0</anchor>
      <arglist>(&quot;shear2D&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>shear2D</name>
      <anchorfile>classFoam_1_1shear2D.html</anchorfile>
      <anchor>a151ab6f9fe94c077d915ec78232c1b04</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~shear2D</name>
      <anchorfile>classFoam_1_1shear2D.html</anchorfile>
      <anchor>a078c128cc168af557e91b76eb0be746e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>velocity</name>
      <anchorfile>classFoam_1_1shear2D.html</anchorfile>
      <anchor>a3fc90a57304aca8d4f216e9d33dc2d42</anchor>
      <arglist>(const vector &amp;p) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::shear3D</name>
    <filename>classFoam_1_1shear3D.html</filename>
    <base>Foam::velocityModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1shear3D.html</anchorfile>
      <anchor>ab8b098f062ef00413cdc05d64a625ed4</anchor>
      <arglist>(&quot;shear3D&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>shear3D</name>
      <anchorfile>classFoam_1_1shear3D.html</anchorfile>
      <anchor>a6b3c552e3b318b133ad535acc68d5e11</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~shear3D</name>
      <anchorfile>classFoam_1_1shear3D.html</anchorfile>
      <anchor>addfc4bb28798e28610d7afaa33a302ee</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>velocity</name>
      <anchorfile>classFoam_1_1shear3D.html</anchorfile>
      <anchor>a3fc90a57304aca8d4f216e9d33dc2d42</anchor>
      <arglist>(const vector &amp;p) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>R</name>
      <anchorfile>classFoam_1_1shear3D.html</anchorfile>
      <anchor>ad62bdfc6055f7395a9c61f8757d3911a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>Umax</name>
      <anchorfile>classFoam_1_1shear3D.html</anchorfile>
      <anchor>afec1342e139c680dd79cb1ff762756e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>x0</name>
      <anchorfile>classFoam_1_1shear3D.html</anchorfile>
      <anchor>ac6a0d2b5b4bca1c831785603fd5fc47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>y0</name>
      <anchorfile>classFoam_1_1shear3D.html</anchorfile>
      <anchor>a4613bfe053c7f4c12217190685b0b81c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::SignChangeNarrowBand</name>
    <filename>classFoam_1_1SignChangeNarrowBand.html</filename>
    <base>Foam::EmptyNarrowBand</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1SignChangeNarrowBand.html</anchorfile>
      <anchor>a6488364477c7499967b18426b07f49e5</anchor>
      <arglist>(&quot;signChange&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SignChangeNarrowBand</name>
      <anchorfile>classFoam_1_1SignChangeNarrowBand.html</anchorfile>
      <anchor>a081dcafeb022d9e3c2c29e6d937246bd</anchor>
      <arglist>(const dictionary &amp;dict, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SignChangeNarrowBand</name>
      <anchorfile>classFoam_1_1SignChangeNarrowBand.html</anchorfile>
      <anchor>a623191113f891a7c236f25263710c639</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>calc</name>
      <anchorfile>classFoam_1_1SignChangeNarrowBand.html</anchorfile>
      <anchor>a251c1e3e56296c54d6171a2cb0fef64e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::signedDistance</name>
    <filename>classFoam_1_1signedDistance.html</filename>
    <base>Foam::profile</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1signedDistance.html</anchorfile>
      <anchor>a5bd4f78e7bfe099462f79bab7c10918c</anchor>
      <arglist>(&quot;signedDistance&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>signedDistance</name>
      <anchorfile>classFoam_1_1signedDistance.html</anchorfile>
      <anchor>a14797e2811feefa2939627aca800c2ad</anchor>
      <arglist>(const fvMesh &amp;mesh, const implicitSurface &amp;surface)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~signedDistance</name>
      <anchorfile>classFoam_1_1signedDistance.html</anchorfile>
      <anchor>ad8be5c3cb1970ebe65f65797aa295015</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1signedDistance.html</anchorfile>
      <anchor>aafa67c9c9084d5a9679e7b187c8caa86</anchor>
      <arglist>(const vector point) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::simpleLinearImplicitScheme</name>
    <filename>classFoam_1_1simpleLinearImplicitScheme.html</filename>
    <base>Foam::SourceScheme</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1simpleLinearImplicitScheme.html</anchorfile>
      <anchor>af57f0593d41076defd451d7673261264</anchor>
      <arglist>(&quot;simpleLinearImplicit&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>simpleLinearImplicitScheme</name>
      <anchorfile>classFoam_1_1simpleLinearImplicitScheme.html</anchorfile>
      <anchor>a0cf9f6ceddb4f64b5559c7632b6e3d49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~simpleLinearImplicitScheme</name>
      <anchorfile>classFoam_1_1simpleLinearImplicitScheme.html</anchorfile>
      <anchor>a117aa95e093ebe9dd11fb8c6be439268</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSc</name>
      <anchorfile>classFoam_1_1simpleLinearImplicitScheme.html</anchorfile>
      <anchor>a4d53deabbecc3fa7d747bc576d506e91</anchor>
      <arglist>(const volScalarField &amp;nonLinearPart, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSp</name>
      <anchorfile>classFoam_1_1simpleLinearImplicitScheme.html</anchorfile>
      <anchor>afbedde408444a4d4d78913d3596885e8</anchor>
      <arglist>(const volScalarField &amp;nonLinearPart)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::SourceScheme</name>
    <filename>classFoam_1_1SourceScheme.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>acd031e02fe4082114d3494d9aa0be4ea</anchor>
      <arglist>(autoPtr, SourceScheme, Dictionary,(),())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SourceScheme</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>af0f330b51f3af30f0a70c233a88ba960</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SourceScheme</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>a85fce3289219c6cb849537cde6b5ab29</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>tmp&lt; fvScalarMatrix &gt;</type>
      <name>discretize</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>afe5c06fbfaef382705462a2f32d8ffe0</anchor>
      <arglist>(const volScalarField &amp;nonLinearPart, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; SourceScheme &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>a88ad7caca1f24b1dec0a53d00a330492</anchor>
      <arglist>(const word type)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSc</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>a4d53deabbecc3fa7d747bc576d506e91</anchor>
      <arglist>(const volScalarField &amp;nonLinearPart, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSp</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>afbedde408444a4d4d78913d3596885e8</anchor>
      <arglist>(const volScalarField &amp;nonLinearPart)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalarField</type>
      <name>Sc_</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>a3dfe28b19f87dcabc40f4f3bbff69a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>scalarField</type>
      <name>Sp_</name>
      <anchorfile>classFoam_1_1SourceScheme.html</anchorfile>
      <anchor>a33eec0337ba814a407ef322f9ebbec46</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::strictNegativeSpLinearImplicitScheme</name>
    <filename>classFoam_1_1strictNegativeSpLinearImplicitScheme.html</filename>
    <base>Foam::SourceScheme</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1strictNegativeSpLinearImplicitScheme.html</anchorfile>
      <anchor>a929c8c6a47f8a7b8d560667ec9d1314a</anchor>
      <arglist>(&quot;strictNegativeSpLinearImplicit&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>strictNegativeSpLinearImplicitScheme</name>
      <anchorfile>classFoam_1_1strictNegativeSpLinearImplicitScheme.html</anchorfile>
      <anchor>a7e70082c0e368463e5011c7acd07b582</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~strictNegativeSpLinearImplicitScheme</name>
      <anchorfile>classFoam_1_1strictNegativeSpLinearImplicitScheme.html</anchorfile>
      <anchor>afe8df6139cc3c2f1b230ff31029074f5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSc</name>
      <anchorfile>classFoam_1_1strictNegativeSpLinearImplicitScheme.html</anchorfile>
      <anchor>a4d53deabbecc3fa7d747bc576d506e91</anchor>
      <arglist>(const volScalarField &amp;nonLinearPart, const volScalarField &amp;psi)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSp</name>
      <anchorfile>classFoam_1_1strictNegativeSpLinearImplicitScheme.html</anchorfile>
      <anchor>afbedde408444a4d4d78913d3596885e8</anchor>
      <arglist>(const volScalarField &amp;nonLinearPart)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::tanhProfile</name>
    <filename>classFoam_1_1tanhProfile.html</filename>
    <base>Foam::signedDistance</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1tanhProfile.html</anchorfile>
      <anchor>ab0769c0c04e71ac2470da4b7d8b20c23</anchor>
      <arglist>(&quot;tanh&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>tanhProfile</name>
      <anchorfile>classFoam_1_1tanhProfile.html</anchorfile>
      <anchor>afa8a29d1e50f05320fff7b7215c16316</anchor>
      <arglist>(const fvMesh &amp;mesh, const implicitSurface &amp;surface)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~tanhProfile</name>
      <anchorfile>classFoam_1_1tanhProfile.html</anchorfile>
      <anchor>a77c850f15e7aade91990fcebb90a3a27</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual scalar</type>
      <name>value</name>
      <anchorfile>classFoam_1_1tanhProfile.html</anchorfile>
      <anchor>aafa67c9c9084d5a9679e7b187c8caa86</anchor>
      <arglist>(const vector point) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar const</type>
      <name>eps_</name>
      <anchorfile>classFoam_1_1tanhProfile.html</anchorfile>
      <anchor>aa66665512a06d4497f52a0eefb9f0746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar const</type>
      <name>limit_</name>
      <anchorfile>classFoam_1_1tanhProfile.html</anchorfile>
      <anchor>aad1b4e4e3db0434c71c5e6f15a2b5977</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::translation</name>
    <filename>classFoam_1_1translation.html</filename>
    <base>Foam::velocityModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1translation.html</anchorfile>
      <anchor>ae9e8f6aa378ed35617ad3c862626690b</anchor>
      <arglist>(&quot;translation&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>translation</name>
      <anchorfile>classFoam_1_1translation.html</anchorfile>
      <anchor>a1be4160520c341177d4e130342fc7b0c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>translation</name>
      <anchorfile>classFoam_1_1translation.html</anchorfile>
      <anchor>a119c664364f438744d9176e4c11885c4</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~translation</name>
      <anchorfile>classFoam_1_1translation.html</anchorfile>
      <anchor>a0e50b1459b3e9dc05e646e29b8b1978c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>velocity</name>
      <anchorfile>classFoam_1_1translation.html</anchorfile>
      <anchor>a3fc90a57304aca8d4f216e9d33dc2d42</anchor>
      <arglist>(const vector &amp;p) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>vector</type>
      <name>velocity_</name>
      <anchorfile>classFoam_1_1translation.html</anchorfile>
      <anchor>ab76af7ee4b170bda7001e8b8f3f99962</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::functionObjects::TVerrorCSV</name>
    <filename>classFoam_1_1functionObjects_1_1TVerrorCSV.html</filename>
    <base>fvMeshFunctionObject</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>a78f5571a5c72b9ec739ca53023a1434b</anchor>
      <arglist>(&quot;TVerrorCSV&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TVerrorCSV</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>aa8f3befd1274062807b3b7e98ef6f70d</anchor>
      <arglist>(const word &amp;name, const Time &amp;runTime, const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TVerrorCSV</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>a9477f1df890ca9779e0f7a9c840f049a</anchor>
      <arglist>(const TVerrorCSV &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>a2be0746539d558c42988d1b39bd1478d</anchor>
      <arglist>(const TVerrorCSV &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>execute</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>a304cfd64aa086af8de5829288d82c74d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>write</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>ae8f6374e29a250261b3979bbd6e5cb40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TVerrorCSV</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>a360d1d780dbfa8590d30a2544aa9437d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="private">
      <type>scalar</type>
      <name>calcTV</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>a1d40cc3ae5d3edcf23bd422d7015d8d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const volScalarField &amp;</type>
      <name>field_</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>a2cc4aa0fff6e95012c557b8afedb03cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>TV_initial_</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>a2f012d071124253c115733c93584ee29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OFstream</type>
      <name>csvFile_</name>
      <anchorfile>classFoam_1_1functionObjects_1_1TVerrorCSV.html</anchorfile>
      <anchor>a4034a69803a73c7bc5b64294d72a3909</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::velocityModel</name>
    <filename>classFoam_1_1velocityModel.html</filename>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>a660172304dfa1b418cc1bded338b9fd9</anchor>
      <arglist>(&quot;none&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>declareRunTimeSelectionTable</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>a473c85bdb630f81e0fb169e04bc0eff1</anchor>
      <arglist>(autoPtr, velocityModel, Mesh,(const fvMesh &amp;mesh),(mesh))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>velocityModel</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>a7c73a1b548eff4262719ee2659c0904f</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~velocityModel</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>a616b252f6258e86d1d7a331b7bdaf850</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>Switch</type>
      <name>isOscillating</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>ad6a612438051c2dc7a194a404c5038f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>oscillationFactor</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>a9e973ae6144bf90782969f072685e11b</anchor>
      <arglist>(scalar const time, const scalar tau) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oscillateVelocity</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>a2289c8291610e9bd8cdec04181a309f3</anchor>
      <arglist>(volVectorField &amp;U, const volVectorField &amp;U0, surfaceScalarField &amp;phi, const surfaceScalarField &amp;phi0, const Time &amp;runTime) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Foam::vector</type>
      <name>velocity</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>a422e328320401e29d3e16eb91acce206</anchor>
      <arglist>(const vector &amp;x) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocity</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>affa92936b9d4019687869906f15716b6</anchor>
      <arglist>(volVectorField &amp;U) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVolumetricFlux</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>a90020fda7136a51f3402192db9677298</anchor>
      <arglist>(surfaceScalarField &amp;phi) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static autoPtr&lt; velocityModel &gt;</type>
      <name>New</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>a9ce0c432bd1404f703b7fa01294eb690</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const fvSolution &amp;</type>
      <name>fvSolution_</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>af11be4d850f43e196ccb23ecb919374e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const dictionary &amp;</type>
      <name>velocityDict_</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>af9d556a544af87558fcd15bb3b73f20f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Switch</type>
      <name>isOscillating_</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>ad73c56cc4cbb27620fe0358627fd8f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const scalar</type>
      <name>tau_</name>
      <anchorfile>classFoam_1_1velocityModel.html</anchorfile>
      <anchor>ac7b18c7f8e221c954255f6b26fd139d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Foam::volumeArea</name>
    <filename>structFoam_1_1volumeArea.html</filename>
    <member kind="function">
      <type></type>
      <name>volumeArea</name>
      <anchorfile>structFoam_1_1volumeArea.html</anchorfile>
      <anchor>a7e2d93250bdc0917d927ad5842eb89f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>volume</name>
      <anchorfile>structFoam_1_1volumeArea.html</anchorfile>
      <anchor>a1d6df86cceb66e595e1f95418da08ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>area</name>
      <anchorfile>structFoam_1_1volumeArea.html</anchorfile>
      <anchor>a86f85bbe6c99780208efd39ca10275b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>volume_</name>
      <anchorfile>structFoam_1_1volumeArea.html</anchorfile>
      <anchor>af3906d6f1c18d3c0bfac43f97db33273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>area_</name>
      <anchorfile>structFoam_1_1volumeArea.html</anchorfile>
      <anchor>ae2b2ec45f56bc4860ffc98f93a4457ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::vortex2D</name>
    <filename>classFoam_1_1vortex2D.html</filename>
    <base>Foam::velocityModel</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1vortex2D.html</anchorfile>
      <anchor>a970f836413a7a9ac0b777e5d237d8e73</anchor>
      <arglist>(&quot;vortex2D&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vortex2D</name>
      <anchorfile>classFoam_1_1vortex2D.html</anchorfile>
      <anchor>ad8872f15ca99257dbe53beab9039d4a3</anchor>
      <arglist>(const fvMesh &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~vortex2D</name>
      <anchorfile>classFoam_1_1vortex2D.html</anchorfile>
      <anchor>a75ec01f58c1ec883c995a691ed3ffb67</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual vector</type>
      <name>velocity</name>
      <anchorfile>classFoam_1_1vortex2D.html</anchorfile>
      <anchor>a3fc90a57304aca8d4f216e9d33dc2d42</anchor>
      <arglist>(const vector &amp;p) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>scalar</type>
      <name>v0_</name>
      <anchorfile>classFoam_1_1vortex2D.html</anchorfile>
      <anchor>a576703fb069eeca1946a1c4d0f2e5be1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Foam::writeIsoSurfaceTopoFunctionObject</name>
    <filename>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</filename>
    <base>dictionaryContent</base>
    <member kind="function">
      <type></type>
      <name>TypeName</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>aa8b4b9c1540a198ed29da207d36e5b6f</anchor>
      <arglist>(&quot;writeIsoSurfaceTopo&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>writeIsoSurfaceTopoFunctionObject</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>a41f699d3399fe0d55f8eb1b864803656</anchor>
      <arglist>(const word &amp;name, const Time &amp;runTime, const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~writeIsoSurfaceTopoFunctionObject</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>ab6bc57d18105d84bd29ddedcba165e4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const dictionary &amp;</type>
      <name>codeContext</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>a8ce01f5986131ed51a3a3460b58cfbe4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>read</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>a6ce0c64db98eb6144d363dbfc86104eb</anchor>
      <arglist>(const dictionary &amp;dict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>execute</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>ae006844a02161d12182ab372ca5c257b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>write</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>ae8f6374e29a250261b3979bbd6e5cb40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>end</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>af545ab12986d2fe462f1013c3bafb5f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const fvMesh &amp;</type>
      <name>mesh</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>acb31d92d519d673eae6328d85d16fa52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>writeIsoSurfaceTopoFunctionObject</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>acdc212b349277065fffcfd29db35431c</anchor>
      <arglist>(const writeIsoSurfaceTopoFunctionObject &amp;)=delete</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classFoam_1_1writeIsoSurfaceTopoFunctionObject.html</anchorfile>
      <anchor>aac672dec2a3126edd16ec7d88d43964a</anchor>
      <arglist>(const writeIsoSurfaceTopoFunctionObject &amp;)=delete</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam</name>
    <filename>namespaceFoam.html</filename>
    <namespace>Foam::functionObjects</namespace>
    <namespace>Foam::fvm</namespace>
    <class kind="class">Foam::explicitGradientFvPatchField</class>
    <class kind="class">Foam::explicitMag1GradientFvPatchField</class>
    <class kind="class">Foam::writeIsoSurfaceTopoFunctionObject</class>
    <class kind="class">Foam::DistanceNarrowBand</class>
    <class kind="class">Foam::EmptyNarrowBand</class>
    <class kind="class">Foam::NarrowBand</class>
    <class kind="class">Foam::NeighbourNarrowBand</class>
    <class kind="class">Foam::SignChangeNarrowBand</class>
    <class kind="class">Foam::geometricPhaseIndicator</class>
    <class kind="class">Foam::heavisidePhaseIndicator</class>
    <class kind="class">Foam::phaseIndicator</class>
    <class kind="class">Foam::sharpJumpPhaseIndicator</class>
    <class kind="class">Foam::profile</class>
    <class kind="class">Foam::signedDistance</class>
    <class kind="class">Foam::tanhProfile</class>
    <class kind="class">Foam::lsqRedistancer</class>
    <class kind="class">Foam::redistancer</class>
    <class kind="class">Foam::GradPsi</class>
    <class kind="class">Foam::NarrowLS</class>
    <class kind="class">Foam::Mollifier</class>
    <class kind="class">Foam::Mollifier1</class>
    <class kind="class">Foam::SDPLS_lin</class>
    <class kind="class">Foam::SDPLS_quad</class>
    <class kind="class">Foam::SDPLS_R</class>
    <class kind="class">Foam::SDPLS_Rlin</class>
    <class kind="class">Foam::SDPLS_Rquad</class>
    <class kind="class">Foam::SDPLSSource</class>
    <class kind="class">Foam::explicitScheme</class>
    <class kind="class">Foam::simpleLinearImplicitScheme</class>
    <class kind="class">Foam::SourceScheme</class>
    <class kind="class">Foam::strictNegativeSpLinearImplicitScheme</class>
    <class kind="class">Foam::implicitSurface</class>
    <class kind="class">Foam::implicitPlane</class>
    <class kind="class">Foam::hesseNormalPlane</class>
    <class kind="class">Foam::implicitSphere</class>
    <class kind="class">Foam::implicitSlottedSphere</class>
    <class kind="class">Foam::implicitEllipsoid</class>
    <class kind="class">Foam::implicitSinc</class>
    <class kind="struct">Foam::volumeArea</class>
    <class kind="class">Foam::velocityModel</class>
    <class kind="class">Foam::shear2D</class>
    <class kind="class">Foam::deformation3D</class>
    <class kind="class">Foam::shear3D</class>
    <class kind="class">Foam::translation</class>
    <class kind="class">Foam::rotation</class>
    <class kind="class">Foam::vortex2D</class>
    <class kind="class">Foam::periodic2D</class>
    <member kind="function">
      <type></type>
      <name>makePatchTypeField</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a20a6e0b0030565578d0ab403910ddac7</anchor>
      <arglist>(fvPatchScalarField, explicitGradientFvPatchField)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>makePatchTypeField</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a45f89717e19c2fbbae7890e3c1a98ab2</anchor>
      <arglist>(fvPatchScalarField, explicitMag1GradientFvPatchField)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a71c6220114d4b84ea81b06f1a65aa218</anchor>
      <arglist>(writeIsoSurfaceTopoFunctionObject, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addRemovableToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ae3bd1095ecbcdb727666b94640889e52</anchor>
      <arglist>(functionObject, writeIsoSurfaceTopoFunctionObject, dictionary)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeIsoSurfaceTopo</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a738a4315dac1967e700e80f3b6ba1513</anchor>
      <arglist>(const fvMesh &amp;mesh, bool forceWrite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a3286008f28a0c036434e59ddff8689cd</anchor>
      <arglist>(DistanceNarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa02a4084681824bad4db184ff7b413d0</anchor>
      <arglist>(NarrowBand, DistanceNarrowBand, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>adacd690f32c981ef82d894636a725bd4</anchor>
      <arglist>(EmptyNarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a9bfcefa171095e080ccd1ba845a7f6e0</anchor>
      <arglist>(NarrowBand, EmptyNarrowBand, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a64456c05e09861bbc67a018f12854e35</anchor>
      <arglist>(NarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ae9b4867f6eca2c867a66fabb9bd447f7</anchor>
      <arglist>(NarrowBand, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a33cfb14877d90fa499e0efddadff71d4</anchor>
      <arglist>(NarrowBand, NarrowBand, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a428c3adcc6870794caf995d44e2cbef2</anchor>
      <arglist>(NeighbourNarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad2027cbe00e8ef44315e7e6d7e0e91bd</anchor>
      <arglist>(NarrowBand, NeighbourNarrowBand, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac8ab48bd8ce047319bcd57e325a6f5fa</anchor>
      <arglist>(SignChangeNarrowBand, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad04fe37b5ba3d93e49418d8ec6b990c4</anchor>
      <arglist>(NarrowBand, SignChangeNarrowBand, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ae016f3651d61dcb411e020e5f03584e9</anchor>
      <arglist>(geometricPhaseIndicator, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>af890e2ddad3972bfe1b807b2fc500713</anchor>
      <arglist>(phaseIndicator, geometricPhaseIndicator, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a19cfd33f0129ce55e7e324b183aee68a</anchor>
      <arglist>(heavisidePhaseIndicator, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab486c677d1c4b01132467bd4e23c581f</anchor>
      <arglist>(phaseIndicator, heavisidePhaseIndicator, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a61fd6f50660a21de9cd0a6faf8532a56</anchor>
      <arglist>(phaseIndicator, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa8e8fd8fc9df9850e0a950236008189a</anchor>
      <arglist>(phaseIndicator, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a1564dde37286c49684fc9e652e092696</anchor>
      <arglist>(sharpJumpPhaseIndicator, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa702af807b24e95260259ab86b7c1057</anchor>
      <arglist>(phaseIndicator, sharpJumpPhaseIndicator, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a514e79965ccab6755e8fad3f6061e158</anchor>
      <arglist>(profile, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad7d2d7288788ed19a825ed4eb364ff66</anchor>
      <arglist>(profile, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad3fa33f40bf3e7b946d8bcfeae2bcc0e</anchor>
      <arglist>(signedDistance, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a0820dfd894eb65f97989bb4788896982</anchor>
      <arglist>(profile, signedDistance, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a70af40570cc8e5f4e1f6c0fe7aadf999</anchor>
      <arglist>(tanhProfile, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a3a902b1858508b9efce183b1b3d7994b</anchor>
      <arglist>(profile, tanhProfile, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a58b08eb083a3646aeeddf3e6ab6bbf2e</anchor>
      <arglist>(lsqRedistancer, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab23e601fb828e2822f24ea878e5c4e08</anchor>
      <arglist>(redistancer, lsqRedistancer, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab4e1f0535d516df679cb63d78be854f5</anchor>
      <arglist>(redistancer, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a4aa5a88490b7a34084c6fc551051713b</anchor>
      <arglist>(redistancer, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a8fac7a43554d7d7a22d92d38c9f98db5</anchor>
      <arglist>(redistancer, redistancer, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a21e833f8c44413bc579e69d5d9e2b730</anchor>
      <arglist>(GradPsi, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aab1b1c3a2193721315f4218e7c3c410b</anchor>
      <arglist>(GradPsi, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>afdf6cd00314438d95c61f2a8db357ba3</anchor>
      <arglist>(GradPsi, GradPsi, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a2ee1f2d19d0a65a16a57ca3643852e69</anchor>
      <arglist>(NarrowLS, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aeb0fb183121657318b8321389472f565</anchor>
      <arglist>(GradPsi, NarrowLS, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aeaf04e0480afde47a7938c1eb083c6de</anchor>
      <arglist>(Mollifier, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a916937c36364d1ec8b01c8ade1182b54</anchor>
      <arglist>(Mollifier, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a17f076a668e43cfbabae8945f219f85b</anchor>
      <arglist>(Mollifier, Mollifier, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a4ab44fda2911c3160198edddef1378aa</anchor>
      <arglist>(Mollifier1, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab455ad18369ae1ede6e2a4c033519cd0</anchor>
      <arglist>(Mollifier, Mollifier1, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad6dcca5f47a89823a012b863bbe47a1a</anchor>
      <arglist>(SDPLS_lin, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab8ccfce21badafffa4b75e48f087ce60</anchor>
      <arglist>(SDPLSSource, SDPLS_lin, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6504ccabad8302192e9efd7641b1169e</anchor>
      <arglist>(SDPLS_quad, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aba13057a47b4a08078f3a0facba1feff</anchor>
      <arglist>(SDPLSSource, SDPLS_quad, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a8c666665b075a641993c5074ccedf345</anchor>
      <arglist>(SDPLS_R, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a95ee7062b2fa1ddc3a4a5d0afd39985c</anchor>
      <arglist>(SDPLSSource, SDPLS_R, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a2ce4fd872da97a672c22a8d6d5389003</anchor>
      <arglist>(SDPLS_Rlin, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a693a4ac541bab2cf350f8af0200277ab</anchor>
      <arglist>(SDPLSSource, SDPLS_Rlin, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a13566e2908917915dd599c87c1c7328c</anchor>
      <arglist>(SDPLS_Rquad, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa45958229dfd90b86067dc3f4c2aea4b</anchor>
      <arglist>(SDPLSSource, SDPLS_Rquad, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a384b2550ea3a2954c25616ae5f3dc4ac</anchor>
      <arglist>(SDPLSSource, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a1fff8586d639d27f381ba4d01ed0fcd4</anchor>
      <arglist>(SDPLSSource, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a584b1e6b5e934a0a7413c7827f72fb20</anchor>
      <arglist>(SDPLSSource, SDPLSSource, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a38a0cc9aa985de046d006a6c40b1fd0c</anchor>
      <arglist>(explicitScheme, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a3dae1fe67173efa4cbfd7ecd8bf70a88</anchor>
      <arglist>(SourceScheme, explicitScheme, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>afe68eda75b13a4ccaf3bd8e0f24b425e</anchor>
      <arglist>(simpleLinearImplicitScheme, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac9cf0163f2ba90afee9e9c5ce74626bc</anchor>
      <arglist>(SourceScheme, simpleLinearImplicitScheme, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac1cce7efdfb7e6bff88187d4807c70d6</anchor>
      <arglist>(SourceScheme, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac95e690ae80090b69344cce92e488b88</anchor>
      <arglist>(SourceScheme, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a36c18829fe8e553cbbc335e6ff335080</anchor>
      <arglist>(SourceScheme, SourceScheme, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a2c4da6cbaa4f7dbb3adea1604c159cd3</anchor>
      <arglist>(strictNegativeSpLinearImplicitScheme, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a2f30863eed1d8ca68336556f9cc57379</anchor>
      <arglist>(SourceScheme, strictNegativeSpLinearImplicitScheme, Dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a42396e2d89ed18301c0a9df3f08c5838</anchor>
      <arglist>(implicitSurface, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a170f3bda2d3eecc237cc5c26187fd630</anchor>
      <arglist>(implicitSurface, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa7a6cea23e97fd661bfdc8d3dfa40ff4</anchor>
      <arglist>(implicitPlane, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a914e0f8e4ee7c0d45f483cf48d529e9c</anchor>
      <arglist>(implicitSurface, implicitPlane, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a15d88d0e0e03b555fe01c4b2b2cbbd86</anchor>
      <arglist>(hesseNormalPlane, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a474568e36062f675b62c8468b1accb9c</anchor>
      <arglist>(implicitSurface, hesseNormalPlane, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a981b4b33164497b63ff9c5c276e5e32f</anchor>
      <arglist>(implicitSphere, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a18df352bbb9f690c8a25f231a5d75757</anchor>
      <arglist>(implicitSurface, implicitSphere, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a0a559d6ed841b58ea3bb979a33905835</anchor>
      <arglist>(implicitSlottedSphere, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6e69a97c424bb29b4c658e9877bade66</anchor>
      <arglist>(implicitSurface, implicitSlottedSphere, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>af6c46e61ccd0a5435930088b91d00698</anchor>
      <arglist>(implicitEllipsoid, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a80e22fb181f0c5f1ee04841006849bce</anchor>
      <arglist>(implicitSurface, implicitEllipsoid, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>aa83ccf2231c9d59e755479ea4a4fcaa8</anchor>
      <arglist>(implicitSinc, false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6c85af302522bd239884c2d14adbc413</anchor>
      <arglist>(implicitSurface, implicitSinc, dictionary)</arglist>
    </member>
    <member kind="function">
      <type>scalar</type>
      <name>normalArea</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a20db5da3f6defbd554bcd5bb8cb5b9e6</anchor>
      <arglist>(PointSequence const &amp;points, const vector &amp;normal)</arglist>
    </member>
    <member kind="function">
      <type>point</type>
      <name>centroid</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a8b4ba40675df057a5c26a6ffbba2a522</anchor>
      <arglist>(PointSequence const &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>centroidAreaNormal</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab703af1c40feef368baf3751afc13ec6</anchor>
      <arglist>(PointSequence const &amp;points, const point &amp;centroid)</arglist>
    </member>
    <member kind="function">
      <type>vector</type>
      <name>orientedAreaNormal</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad30a84b8f52b633342470f1de7a82d28</anchor>
      <arglist>(OrientedPointSequence const &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>Intersection</type>
      <name>intersectCell</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6487d960ee71cfbffadefec226202205</anchor>
      <arglist>(label cellL, const fvMesh &amp;mesh, ImplicitPlane plane)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ab4abb7dbbf3e6ba99e90ca3361092863</anchor>
      <arglist>(velocityModel, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>adc41e8fe10ea896cc46c9ba87fa4270d</anchor>
      <arglist>(velocityModel, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6f740b8adfc44000c80cfbdc284e960b</anchor>
      <arglist>(deformation3D, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6ad9de4c2039d49232a3de0b27f9cfff</anchor>
      <arglist>(velocityModel, deformation3D, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a1db28cf5ad4472a5a86b70477a8cf974</anchor>
      <arglist>(shear3D, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a4d2b1d014e248e4010dc57da71138998</anchor>
      <arglist>(velocityModel, shear3D, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a5a14ae6bc28b8d51cbd4e59ff42fcfca</anchor>
      <arglist>(translation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ac3f529c69ffd79aba01e723bb0ae7ff9</anchor>
      <arglist>(velocityModel, translation, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad991b36a4f6f70a498313dcb83814b6c</anchor>
      <arglist>(rotation, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a52002db7f067534ab847f133baf4cf9f</anchor>
      <arglist>(velocityModel, rotation, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a8acd7a35318d8686eb0019bf759de162</anchor>
      <arglist>(vortex2D, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a3b329f58c5d5e5f4dd7b064e32324cb2</anchor>
      <arglist>(velocityModel, vortex2D, Mesh)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a6b3a0afeb94a80efea935b7cd4844be2</anchor>
      <arglist>(periodic2D, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>ad89597dcc8c0c3e357b72dab21724657</anchor>
      <arglist>(velocityModel, periodic2D, Mesh)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>correctFlux</name>
      <anchorfile>namespaceFoam.html</anchorfile>
      <anchor>a39f6ae52d5b2edcdd0e997e46ca56e46</anchor>
      <arglist>(surfaceScalarField &amp;phi)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::functionObjects</name>
    <filename>namespaceFoam_1_1functionObjects.html</filename>
    <class kind="class">Foam::functionObjects::gradPsiError</class>
    <class kind="class">Foam::functionObjects::gradPsiErrorCSV</class>
    <class kind="class">Foam::functionObjects::TVerrorCSV</class>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a8b774d4ecc0d1bb8410cdabc3bc7d081</anchor>
      <arglist>(gradPsiError, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a93d8171abfb96725b562df59a21a3968</anchor>
      <arglist>(functionObject, gradPsiError, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a4d8379fccaa4f0e31d79cee2a080d4c8</anchor>
      <arglist>(gradPsiErrorCSV, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a6a74401d9ffb46bd53f737c6220ca417</anchor>
      <arglist>(functionObject, gradPsiErrorCSV, dictionary)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>defineTypeNameAndDebug</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a91ccc94a44a5d2a01c9d7e60dea238c1</anchor>
      <arglist>(TVerrorCSV, 0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>addToRunTimeSelectionTable</name>
      <anchorfile>namespaceFoam_1_1functionObjects.html</anchorfile>
      <anchor>a5c199415fa72d584095e22858914ae4f</anchor>
      <arglist>(functionObject, TVerrorCSV, dictionary)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Foam::fvm</name>
    <filename>namespaceFoam_1_1fvm.html</filename>
    <member kind="function">
      <type>tmp&lt; fvScalarMatrix &gt;</type>
      <name>SDPLSSource</name>
      <anchorfile>namespaceFoam_1_1fvm.html</anchorfile>
      <anchor>a240172bd05106479c7c0f3089961527f</anchor>
      <arglist>(const volScalarField &amp;psi, const volVectorField &amp;U)</arglist>
    </member>
  </compound>
</tagfile>
